/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package galeras;

import ConexionBD.ConexionBD;
import ClasesVO.productoVO;
import ClasesVO.mesasVO;
import ClasesVO.categoriaVO;
import ClasesVO.MeserosVO;
import ClasesVO.mesasModificarVO;
import com.sun.glass.events.KeyEvent;
import java.awt.Frame;
import java.time.LocalDateTime;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import static java.util.concurrent.TimeUnit.SECONDS;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.UIManager;
import desplazable.Desface;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cdani
 */
public class Beta_Galera extends javax.swing.JFrame {

    /**
     * Creates new form Beta_Galera
     */
    public Beta_Galera() {
        try {
            initComponents();
            this.setExtendedState(Frame.MAXIMIZED_BOTH);
            //this.colorMesaDefault();
            this.cargarComboMesas();
            this.mostrarPedidas();
            this.cargarComboCategoriasComparativa();
            this.mostrarMeseros();
            this.mostrarCategoria();
            this.mostrarProducto();
            this.cargarComboMesero();
            this.circuloEnVivo();
            try {
                this.cargarComboCategorias();
            } catch (SQLException ex) {
                Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
            }
            tID_Productos.setText(""+this.generarIDProducto(id));
            tIDUsuario.setText(""+this.generarIDCuentas(id_cuentas));
            tID_Meseros.setText(""+this.generarIDMeseros(id));
            tIDCategoria.setText(""+this.generarIDCategoria(id));
            jInicioSesion.setVisible(false);
            setIconImage(getIconImage());
            ModificarPedido.setVisible(false);
            User.setVisible(false);
            userInfo.setVisible(false);
            Cuentas.setVisible(false);
            eliminarUsuario.setVisible(false);
            tablaCuentas.setVisible(false);
            Productos.setVisible(false);
            Meseros.setVisible(false);
            Mesas.setVisible(false);
            MesaPrincipal.setVisible(false);
            Reporte.setVisible(false);
            Sillas.setVisible(false);
            Comparativa.setVisible(false);
            jPreInformacion.setVisible(false);
            Mesas.setVisible(false);
            this.inicio();
            jTiempo.setText("Ultima sesion: "+tiempo.getDayOfMonth()+"/"+tiempo.getMonth()+"/"+tiempo.getYear()+" "+tiempo.getHour()+":"+tiempo.getMinute()+":"+tiempo.getSecond());
            FechaActualMesero.setText("Fecha actual: "+tiempo.getDayOfMonth()+"/"+tiempo.getMonth()+"/"+tiempo.getYear());
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInicio = new javax.swing.JPanel();
        PagarPedido = new javax.swing.JPanel();
        bSalirModificarPedido1 = new javax.swing.JButton();
        lTituloMesa2 = new javax.swing.JLabel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        panelMesero10 = new javax.swing.JPanel();
        jLabel106 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        bPagar = new javax.swing.JButton();
        jLabel113 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        ModificarTabla1 = new javax.swing.JTable();
        jLabel117 = new javax.swing.JLabel();
        tMeseroPedido1 = new javax.swing.JTextField();
        jLabel118 = new javax.swing.JLabel();
        cMesaModificar1 = new javax.swing.JComboBox<>();
        tPrecioModificar1 = new javax.swing.JTextField();
        tTicketModificar1 = new javax.swing.JTextField();
        jLabel119 = new javax.swing.JLabel();
        ModificarPedido = new javax.swing.JPanel();
        bSalirModificarPedido = new javax.swing.JButton();
        lTituloMesa1 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        panelMesero9 = new javax.swing.JPanel();
        jLabel85 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        bAgregarPedidoModificar = new javax.swing.JButton();
        jLabel99 = new javax.swing.JLabel();
        jCategoriaModificar = new javax.swing.JComboBox<>();
        jLabel100 = new javax.swing.JLabel();
        JProductoModificar = new javax.swing.JComboBox<>();
        jLabel101 = new javax.swing.JLabel();
        sCantidadModificar = new javax.swing.JSpinner();
        jLabel102 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        ModificarTabla = new javax.swing.JTable();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        tMeseroPedido = new javax.swing.JTextField();
        jLabel105 = new javax.swing.JLabel();
        cMesaModificar = new javax.swing.JComboBox<>();
        tPrecioModificar = new javax.swing.JTextField();
        tTicketModificar = new javax.swing.JTextField();
        User = new javax.swing.JPanel();
        bSalirInfo = new javax.swing.JButton();
        jLabel86 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        panelMesero8 = new javax.swing.JPanel();
        bVisualizar1 = new javax.swing.JButton();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        tNombresUser = new javax.swing.JTextField();
        jLabel91 = new javax.swing.JLabel();
        tUsuarioUser = new javax.swing.JTextField();
        tContraseñaUser = new javax.swing.JTextField();
        jLabel92 = new javax.swing.JLabel();
        tApellidoMaternoUser = new javax.swing.JTextField();
        tIDUsuarioUser = new javax.swing.JTextField();
        bEliminarUsuario1 = new javax.swing.JButton();
        tApellidoPaternoUser = new javax.swing.JTextField();
        jLabel93 = new javax.swing.JLabel();
        Cuentas = new javax.swing.JPanel();
        eliminarUsuario = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        bSalirEliminarUsuario = new javax.swing.JButton();
        jTitulo2 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaEliminar = new javax.swing.JTable();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        tBorrar = new javax.swing.JTextField();
        tBorrarCuenta = new javax.swing.JButton();
        tablaCuentas = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        bSalirTablaCuenta = new javax.swing.JButton();
        jTitulo1 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tablaCuenta = new javax.swing.JTable();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        bSalirMesas1 = new javax.swing.JButton();
        jLabel48 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        panelMesero7 = new javax.swing.JPanel();
        bVisualizar = new javax.swing.JButton();
        jLabel76 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        tNombres = new javax.swing.JTextField();
        lValidacionU = new javax.swing.JLabel();
        tUsuario = new javax.swing.JTextField();
        tContraseña = new javax.swing.JTextField();
        jLabel72 = new javax.swing.JLabel();
        tApellidoMaterno = new javax.swing.JTextField();
        tIDUsuario = new javax.swing.JTextField();
        bRegistrarSesion = new javax.swing.JButton();
        bEliminarUsuario = new javax.swing.JButton();
        tApellidoPaterno = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        MesaPrincipal = new javax.swing.JPanel();
        bSalirMesasPrincipales = new javax.swing.JButton();
        lTituloMesa = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        panelMesero4 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        bAgregarPedido = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jCategoria = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        JProducto = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        sCantidad = new javax.swing.JSpinner();
        jLabel47 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        MesaTabla = new javax.swing.JTable();
        jLabel71 = new javax.swing.JLabel();
        cMeseroMesas = new javax.swing.JComboBox<>();
        jLabel83 = new javax.swing.JLabel();
        tTicketMesas = new javax.swing.JTextField();
        jLabel84 = new javax.swing.JLabel();
        cMesa = new javax.swing.JComboBox<>();
        bEnviarPedido = new javax.swing.JButton();
        tPrecioMesa = new javax.swing.JTextField();
        Productos = new javax.swing.JPanel();
        bSalirProductos = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        panelMesero6 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        tIDCategoria = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        bRegistrarCategoria = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tTablaCategoria = new javax.swing.JTable();
        lValidacionC = new javax.swing.JLabel();
        tEscribirCategoria = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tID_Productos = new javax.swing.JTextField();
        tPrecioProducto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jCategoriaProducto = new javax.swing.JComboBox<>();
        jLabel68 = new javax.swing.JLabel();
        tNombreproducto = new javax.swing.JTextField();
        bRegistroProducto = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tTablaProducto = new javax.swing.JTable();
        jLabel73 = new javax.swing.JLabel();
        lValidacionP = new javax.swing.JLabel();
        Reporte = new javax.swing.JPanel();
        bSalirReporte = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        panelMesero5 = new javax.swing.JPanel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        MesaTabla1 = new javax.swing.JTable();
        jLabel52 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox<>();
        Comparativa = new javax.swing.JPanel();
        bSalirComparativa = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        panelMesero3 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        cComparativaCombo = new javax.swing.JComboBox<>();
        jLabel39 = new javax.swing.JLabel();
        jSeleccionProducto1 = new javax.swing.JComboBox<>();
        jLabel40 = new javax.swing.JLabel();
        jSeleccionProducto2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        Sillas = new javax.swing.JPanel();
        bSalirMesas = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        panelMesero2 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        Meseros = new javax.swing.JPanel();
        bSalirMeseros = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tID_Meseros = new javax.swing.JTextField();
        tNombre_Mesero = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        panelMesero1 = new javax.swing.JPanel();
        FechaActualMesero = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tmostrarMeseros = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tApellidoP = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        tApellidoM = new javax.swing.JTextField();
        bRegistrarMesero = new javax.swing.JButton();
        bEliminarMesero = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPreInformacion = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTiempo1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Mesas = new javax.swing.JPanel();
        Mesa1 = new javax.swing.JLabel();
        Mesa2 = new javax.swing.JLabel();
        Mesa3 = new javax.swing.JLabel();
        Mesa4 = new javax.swing.JLabel();
        Mesa5 = new javax.swing.JLabel();
        bPagarMesa = new javax.swing.JButton();
        bAgregarMesa = new javax.swing.JButton();
        bModificarMesa = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        PedidosEnVivo = new javax.swing.JPanel();
        lll = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TablaEnVivo = new javax.swing.JTable();
        lCirculo = new javax.swing.JLabel();
        jMenu = new javax.swing.JPanel();
        jTitulo = new javax.swing.JLabel();
        jMesas = new javax.swing.JLabel();
        jComparativa = new javax.swing.JLabel();
        jProductos = new javax.swing.JLabel();
        jReporte = new javax.swing.JLabel();
        jMeseros = new javax.swing.JLabel();
        jCuentas = new javax.swing.JLabel();
        lUsuario = new javax.swing.JLabel();
        userInfo = new javax.swing.JPanel();
        lCerrarSesion = new javax.swing.JLabel();
        lUserInfo = new javax.swing.JLabel();
        jInicioSesion = new javax.swing.JPanel();
        jTiempo = new javax.swing.JLabel();
        lGaleras = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Galeras | Inicio");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jInicio.setBackground(new java.awt.Color(255, 255, 255));
        jInicio.setLayout(null);

        PagarPedido.setBackground(new java.awt.Color(255, 255, 255));
        PagarPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PagarPedidoMouseEntered(evt);
            }
        });
        PagarPedido.setLayout(null);

        bSalirModificarPedido1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirModificarPedido1.setForeground(new java.awt.Color(255, 255, 255));
        bSalirModificarPedido1.setText("X");
        bSalirModificarPedido1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirModificarPedido1ActionPerformed(evt);
            }
        });
        PagarPedido.add(bSalirModificarPedido1);
        bSalirModificarPedido1.setBounds(1290, 10, 90, 60);

        lTituloMesa2.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lTituloMesa2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTituloMesa2.setText("Pagar Ticket");
        PagarPedido.add(lTituloMesa2);
        lTituloMesa2.setBounds(190, 10, 1100, 80);

        jPanel22.setBackground(new java.awt.Color(0, 0, 0));
        PagarPedido.add(jPanel22);
        jPanel22.setBounds(180, 10, 10, 610);

        jPanel23.setBackground(new java.awt.Color(0, 0, 0));
        PagarPedido.add(jPanel23);
        jPanel23.setBounds(0, 0, 1400, 10);

        panelMesero10.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero10.setLayout(null);

        jLabel106.setBackground(new java.awt.Color(0, 0, 0));
        jLabel106.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel106.setText("M");
        panelMesero10.add(jLabel106);
        jLabel106.setBounds(50, 20, 120, 90);

        jLabel107.setBackground(new java.awt.Color(0, 0, 0));
        jLabel107.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel107.setText("E");
        panelMesero10.add(jLabel107);
        jLabel107.setBounds(50, 140, 100, 90);

        jLabel108.setBackground(new java.awt.Color(0, 0, 0));
        jLabel108.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel108.setText("S");
        panelMesero10.add(jLabel108);
        jLabel108.setBounds(50, 260, 70, 90);

        jLabel109.setBackground(new java.awt.Color(0, 0, 0));
        jLabel109.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel109.setText("A");
        panelMesero10.add(jLabel109);
        jLabel109.setBounds(50, 380, 100, 90);

        jLabel110.setBackground(new java.awt.Color(0, 0, 0));
        jLabel110.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel110.setText("S");
        panelMesero10.add(jLabel110);
        jLabel110.setBounds(50, 500, 100, 90);

        PagarPedido.add(panelMesero10);
        panelMesero10.setBounds(0, 0, 180, 620);

        jLabel111.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel111.setText("VERSION INTERFACE 2.0");
        PagarPedido.add(jLabel111);
        jLabel111.setBounds(1150, 580, 250, 30);

        bPagar.setBackground(new java.awt.Color(255, 255, 0));
        bPagar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bPagar.setText("Pagar");
        bPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPagarActionPerformed(evt);
            }
        });
        PagarPedido.add(bPagar);
        bPagar.setBounds(460, 520, 240, 50);

        jLabel113.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel113.setText("Mesa:");
        PagarPedido.add(jLabel113);
        jLabel113.setBounds(570, 130, 80, 32);

        jLabel115.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel115.setText("Descripcion:");
        PagarPedido.add(jLabel115);
        jLabel115.setBounds(230, 210, 170, 32);

        ModificarTabla1.setBackground(new java.awt.Color(255, 255, 0));
        ModificarTabla1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ModificarTabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane10.setViewportView(ModificarTabla1);

        PagarPedido.add(jScrollPane10);
        jScrollPane10.setBounds(210, 290, 1150, 190);

        jLabel117.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel117.setText("Mesero:");
        PagarPedido.add(jLabel117);
        jLabel117.setBounds(890, 130, 100, 32);

        tMeseroPedido1.setEditable(false);
        tMeseroPedido1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tMeseroPedido1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tMeseroPedido1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tMeseroPedido1ActionPerformed(evt);
            }
        });
        PagarPedido.add(tMeseroPedido1);
        tMeseroPedido1.setBounds(1000, 130, 250, 30);

        jLabel118.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel118.setText("Ticket:");
        PagarPedido.add(jLabel118);
        jLabel118.setBounds(260, 130, 140, 32);

        cMesaModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cMesaModificar1ActionPerformed(evt);
            }
        });
        PagarPedido.add(cMesaModificar1);
        cMesaModificar1.setBounds(650, 130, 170, 30);

        tPrecioModificar1.setEditable(false);
        PagarPedido.add(tPrecioModificar1);
        tPrecioModificar1.setBounds(1070, 520, 140, 30);

        tTicketModificar1.setEditable(false);
        tTicketModificar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tTicketModificar1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tTicketModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tTicketModificar1ActionPerformed(evt);
            }
        });
        PagarPedido.add(tTicketModificar1);
        tTicketModificar1.setBounds(370, 130, 110, 30);

        jLabel119.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel119.setText("Precio Total: $");
        PagarPedido.add(jLabel119);
        jLabel119.setBounds(890, 520, 170, 32);

        jInicio.add(PagarPedido);
        PagarPedido.setBounds(0, 90, 1380, 620);

        ModificarPedido.setBackground(new java.awt.Color(255, 255, 255));
        ModificarPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ModificarPedidoMouseEntered(evt);
            }
        });
        ModificarPedido.setLayout(null);

        bSalirModificarPedido.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirModificarPedido.setForeground(new java.awt.Color(255, 255, 255));
        bSalirModificarPedido.setText("X");
        bSalirModificarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirModificarPedidoActionPerformed(evt);
            }
        });
        ModificarPedido.add(bSalirModificarPedido);
        bSalirModificarPedido.setBounds(1290, 10, 90, 60);

        lTituloMesa1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lTituloMesa1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTituloMesa1.setText("Modificar pedido");
        ModificarPedido.add(lTituloMesa1);
        lTituloMesa1.setBounds(190, 0, 1100, 80);

        jPanel19.setBackground(new java.awt.Color(0, 0, 0));
        ModificarPedido.add(jPanel19);
        jPanel19.setBounds(180, 10, 10, 610);

        jPanel20.setBackground(new java.awt.Color(0, 0, 0));
        ModificarPedido.add(jPanel20);
        jPanel20.setBounds(0, 0, 1400, 10);

        panelMesero9.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero9.setLayout(null);

        jLabel85.setBackground(new java.awt.Color(0, 0, 0));
        jLabel85.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel85.setText("M");
        panelMesero9.add(jLabel85);
        jLabel85.setBounds(50, 20, 120, 90);

        jLabel94.setBackground(new java.awt.Color(0, 0, 0));
        jLabel94.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel94.setText("E");
        panelMesero9.add(jLabel94);
        jLabel94.setBounds(50, 140, 100, 90);

        jLabel95.setBackground(new java.awt.Color(0, 0, 0));
        jLabel95.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel95.setText("S");
        panelMesero9.add(jLabel95);
        jLabel95.setBounds(50, 260, 70, 90);

        jLabel96.setBackground(new java.awt.Color(0, 0, 0));
        jLabel96.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel96.setText("A");
        panelMesero9.add(jLabel96);
        jLabel96.setBounds(50, 380, 100, 90);

        jLabel97.setBackground(new java.awt.Color(0, 0, 0));
        jLabel97.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel97.setText("S");
        panelMesero9.add(jLabel97);
        jLabel97.setBounds(50, 500, 100, 90);

        ModificarPedido.add(panelMesero9);
        panelMesero9.setBounds(0, 0, 180, 620);

        jLabel98.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel98.setText("VERSION INTERFACE 2.0");
        ModificarPedido.add(jLabel98);
        jLabel98.setBounds(1150, 580, 250, 30);

        bAgregarPedidoModificar.setBackground(new java.awt.Color(255, 255, 0));
        bAgregarPedidoModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bAgregarPedidoModificar.setText("Agregar producto");
        bAgregarPedidoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarPedidoModificarActionPerformed(evt);
            }
        });
        ModificarPedido.add(bAgregarPedidoModificar);
        bAgregarPedidoModificar.setBounds(600, 310, 240, 50);

        jLabel99.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel99.setText("Categoria:");
        ModificarPedido.add(jLabel99);
        jLabel99.setBounds(260, 230, 120, 32);

        jCategoriaModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCategoriaModificarActionPerformed(evt);
            }
        });
        ModificarPedido.add(jCategoriaModificar);
        jCategoriaModificar.setBounds(420, 230, 140, 30);

        jLabel100.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel100.setText("Mesa:");
        ModificarPedido.add(jLabel100);
        jLabel100.setBounds(570, 130, 80, 32);

        JProductoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JProductoModificarActionPerformed(evt);
            }
        });
        ModificarPedido.add(JProductoModificar);
        JProductoModificar.setBounds(770, 230, 180, 30);

        jLabel101.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel101.setText("Cantidad:");
        ModificarPedido.add(jLabel101);
        jLabel101.setBounds(1030, 230, 120, 30);
        ModificarPedido.add(sCantidadModificar);
        sCantidadModificar.setBounds(1170, 230, 60, 30);

        jLabel102.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel102.setText("Precio: $");
        ModificarPedido.add(jLabel102);
        jLabel102.setBounds(1010, 320, 100, 32);

        ModificarTabla.setBackground(new java.awt.Color(255, 255, 0));
        ModificarTabla.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ModificarTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane9.setViewportView(ModificarTabla);

        ModificarPedido.add(jScrollPane9);
        jScrollPane9.setBounds(210, 380, 1150, 190);

        jLabel103.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel103.setText("Producto:");
        ModificarPedido.add(jLabel103);
        jLabel103.setBounds(630, 220, 140, 40);

        jLabel104.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel104.setText("Mesero:");
        ModificarPedido.add(jLabel104);
        jLabel104.setBounds(890, 130, 100, 32);

        tMeseroPedido.setEditable(false);
        tMeseroPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tMeseroPedido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tMeseroPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tMeseroPedidoActionPerformed(evt);
            }
        });
        ModificarPedido.add(tMeseroPedido);
        tMeseroPedido.setBounds(1000, 130, 250, 30);

        jLabel105.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel105.setText("Ticket:");
        ModificarPedido.add(jLabel105);
        jLabel105.setBounds(260, 130, 140, 32);

        cMesaModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cMesaModificarActionPerformed(evt);
            }
        });
        ModificarPedido.add(cMesaModificar);
        cMesaModificar.setBounds(650, 130, 170, 30);

        tPrecioModificar.setEditable(false);
        ModificarPedido.add(tPrecioModificar);
        tPrecioModificar.setBounds(1110, 320, 140, 30);

        tTicketModificar.setEditable(false);
        tTicketModificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tTicketModificar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tTicketModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tTicketModificarActionPerformed(evt);
            }
        });
        ModificarPedido.add(tTicketModificar);
        tTicketModificar.setBounds(370, 130, 110, 30);

        jInicio.add(ModificarPedido);
        ModificarPedido.setBounds(0, 90, 1380, 620);

        User.setBackground(new java.awt.Color(255, 255, 255));
        User.setLayout(null);

        bSalirInfo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirInfo.setForeground(new java.awt.Color(255, 255, 255));
        bSalirInfo.setText("X");
        bSalirInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirInfoActionPerformed(evt);
            }
        });
        User.add(bSalirInfo);
        bSalirInfo.setBounds(1280, 10, 90, 60);

        jLabel86.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel86.setText("INFORMACION DE CUENTA");
        User.add(jLabel86);
        jLabel86.setBounds(460, 0, 640, 80);

        jPanel16.setBackground(new java.awt.Color(0, 0, 0));
        User.add(jPanel16);
        jPanel16.setBounds(160, 10, 10, 610);

        jPanel21.setBackground(new java.awt.Color(0, 0, 0));
        User.add(jPanel21);
        jPanel21.setBounds(0, 0, 1400, 10);

        panelMesero8.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero8.setLayout(null);
        User.add(panelMesero8);
        panelMesero8.setBounds(0, 0, 160, 620);

        bVisualizar1.setBackground(new java.awt.Color(255, 255, 255));
        bVisualizar1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bVisualizar1.setText("Modificar");
        bVisualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVisualizar1ActionPerformed(evt);
            }
        });
        User.add(bVisualizar1);
        bVisualizar1.setBounds(500, 480, 240, 70);

        jLabel87.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel87.setText("VERSION INTERFACE 1.0");
        User.add(jLabel87);
        jLabel87.setBounds(1150, 580, 250, 30);

        jLabel88.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel88.setText("Nombre(s) del usuario:");
        User.add(jLabel88);
        jLabel88.setBounds(280, 110, 270, 50);

        jLabel89.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel89.setText("ID Usuario:");
        User.add(jLabel89);
        jLabel89.setBounds(710, 240, 140, 50);

        jLabel90.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel90.setText("Apellido materno:");
        User.add(jLabel90);
        jLabel90.setBounds(970, 110, 210, 50);

        tNombresUser.setEditable(false);
        tNombresUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tNombresUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tNombresUser.setToolTipText("Escriba");
        tNombresUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNombresUserActionPerformed(evt);
            }
        });
        User.add(tNombresUser);
        tNombresUser.setBounds(280, 170, 270, 30);

        jLabel91.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel91.setText("Usuario: ");
        User.add(jLabel91);
        jLabel91.setBounds(500, 320, 120, 50);

        tUsuarioUser.setEditable(false);
        tUsuarioUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tUsuarioUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tUsuarioUser.setToolTipText("Escriba");
        tUsuarioUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tUsuarioUserActionPerformed(evt);
            }
        });
        User.add(tUsuarioUser);
        tUsuarioUser.setBounds(420, 380, 270, 30);

        tContraseñaUser.setEditable(false);
        tContraseñaUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tContraseñaUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tContraseñaUser.setToolTipText("Escriba");
        tContraseñaUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tContraseñaUserActionPerformed(evt);
            }
        });
        User.add(tContraseñaUser);
        tContraseñaUser.setBounds(840, 380, 270, 30);

        jLabel92.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel92.setText("Contraseña:");
        User.add(jLabel92);
        jLabel92.setBounds(910, 320, 140, 50);

        tApellidoMaternoUser.setEditable(false);
        tApellidoMaternoUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tApellidoMaternoUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tApellidoMaternoUser.setToolTipText("Escriba");
        tApellidoMaternoUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tApellidoMaternoUserActionPerformed(evt);
            }
        });
        User.add(tApellidoMaternoUser);
        tApellidoMaternoUser.setBounds(940, 170, 270, 30);

        tIDUsuarioUser.setEditable(false);
        tIDUsuarioUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tIDUsuarioUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tIDUsuarioUser.setToolTipText("Escriba");
        tIDUsuarioUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tIDUsuarioUserActionPerformed(evt);
            }
        });
        User.add(tIDUsuarioUser);
        tIDUsuarioUser.setBounds(620, 290, 270, 30);

        bEliminarUsuario1.setBackground(new java.awt.Color(255, 255, 255));
        bEliminarUsuario1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bEliminarUsuario1.setText("Eliminar");
        bEliminarUsuario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarUsuario1ActionPerformed(evt);
            }
        });
        User.add(bEliminarUsuario1);
        bEliminarUsuario1.setBounds(830, 480, 240, 70);

        tApellidoPaternoUser.setEditable(false);
        tApellidoPaternoUser.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tApellidoPaternoUser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tApellidoPaternoUser.setToolTipText("Escriba");
        tApellidoPaternoUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tApellidoPaternoUserActionPerformed(evt);
            }
        });
        User.add(tApellidoPaternoUser);
        tApellidoPaternoUser.setBounds(620, 170, 270, 30);

        jLabel93.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel93.setText("Apellido paterno:");
        User.add(jLabel93);
        jLabel93.setBounds(650, 110, 210, 50);

        jInicio.add(User);
        User.setBounds(0, 90, 1370, 620);

        Cuentas.setBackground(new java.awt.Color(255, 255, 255));
        Cuentas.setLayout(null);

        eliminarUsuario.setBackground(new java.awt.Color(204, 204, 204));
        eliminarUsuario.setLayout(null);

        jPanel18.setBackground(new java.awt.Color(255, 255, 0));
        jPanel18.setLayout(null);

        bSalirEliminarUsuario.setBackground(new java.awt.Color(255, 255, 0));
        bSalirEliminarUsuario.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        bSalirEliminarUsuario.setText("X");
        bSalirEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirEliminarUsuarioActionPerformed(evt);
            }
        });
        jPanel18.add(bSalirEliminarUsuario);
        bSalirEliminarUsuario.setBounds(300, 20, 80, 50);

        jTitulo2.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        jTitulo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/1663952285593 (2).png"))); // NOI18N
        jTitulo2.setText("GALERAS");
        jPanel18.add(jTitulo2);
        jTitulo2.setBounds(10, 0, 220, 90);

        eliminarUsuario.add(jPanel18);
        jPanel18.setBounds(0, 0, 400, 90);

        tablaEliminar.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        tablaEliminar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(tablaEliminar);

        eliminarUsuario.add(jScrollPane7);
        jScrollPane7.setBounds(0, 170, 400, 190);

        jLabel77.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel77.setText("ID Usuario:");
        eliminarUsuario.add(jLabel77);
        jLabel77.setBounds(10, 370, 100, 50);

        jLabel78.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel78.setText("VERSION INTERFACE 1.0");
        eliminarUsuario.add(jLabel78);
        jLabel78.setBounds(220, 430, 190, 30);

        jLabel79.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel79.setText("ELIMINAR USUARIOS");
        eliminarUsuario.add(jLabel79);
        jLabel79.setBounds(80, 100, 250, 40);
        eliminarUsuario.add(tBorrar);
        tBorrar.setBounds(120, 380, 180, 30);

        tBorrarCuenta.setText("Borrar");
        tBorrarCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tBorrarCuentaActionPerformed(evt);
            }
        });
        eliminarUsuario.add(tBorrarCuenta);
        tBorrarCuenta.setBounds(310, 380, 77, 23);

        Cuentas.add(eliminarUsuario);
        eliminarUsuario.setBounds(880, 20, 400, 460);

        tablaCuentas.setBackground(new java.awt.Color(204, 204, 204));
        tablaCuentas.setLayout(null);

        jPanel17.setBackground(new java.awt.Color(255, 255, 0));
        jPanel17.setLayout(null);

        bSalirTablaCuenta.setBackground(new java.awt.Color(255, 255, 0));
        bSalirTablaCuenta.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        bSalirTablaCuenta.setText("X");
        bSalirTablaCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirTablaCuentaActionPerformed(evt);
            }
        });
        jPanel17.add(bSalirTablaCuenta);
        bSalirTablaCuenta.setBounds(300, 20, 80, 50);

        jTitulo1.setFont(new java.awt.Font("Dialog", 1, 30)); // NOI18N
        jTitulo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/1663952285593 (2).png"))); // NOI18N
        jTitulo1.setText("GALERAS");
        jPanel17.add(jTitulo1);
        jTitulo1.setBounds(10, 0, 220, 90);

        tablaCuentas.add(jPanel17);
        jPanel17.setBounds(0, 0, 400, 90);

        tablaCuenta.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        tablaCuenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(tablaCuenta);

        tablaCuentas.add(jScrollPane6);
        jScrollPane6.setBounds(0, 170, 400, 230);

        jLabel74.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel74.setText("TABLA DE CUENTAS");
        tablaCuentas.add(jLabel74);
        jLabel74.setBounds(80, 100, 250, 40);

        jLabel75.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel75.setText("VERSION INTERFACE 1.0");
        tablaCuentas.add(jLabel75);
        jLabel75.setBounds(220, 430, 190, 30);

        Cuentas.add(tablaCuentas);
        tablaCuentas.setBounds(270, 20, 400, 460);

        bSalirMesas1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirMesas1.setForeground(new java.awt.Color(255, 255, 255));
        bSalirMesas1.setText("X");
        bSalirMesas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirMesas1ActionPerformed(evt);
            }
        });
        Cuentas.add(bSalirMesas1);
        bSalirMesas1.setBounds(1280, 10, 90, 60);

        jLabel48.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel48.setText("REGISTROS DE CUENTAS");
        Cuentas.add(jLabel48);
        jLabel48.setBounds(490, 0, 610, 80);

        jPanel14.setBackground(new java.awt.Color(0, 0, 0));
        Cuentas.add(jPanel14);
        jPanel14.setBounds(160, 10, 10, 610);

        jPanel15.setBackground(new java.awt.Color(0, 0, 0));
        Cuentas.add(jPanel15);
        jPanel15.setBounds(0, 0, 1400, 10);

        panelMesero7.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero7.setLayout(null);
        Cuentas.add(panelMesero7);
        panelMesero7.setBounds(0, 0, 160, 620);

        bVisualizar.setBackground(new java.awt.Color(255, 255, 255));
        bVisualizar.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bVisualizar.setText("Visualizar");
        bVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVisualizarActionPerformed(evt);
            }
        });
        Cuentas.add(bVisualizar);
        bVisualizar.setBounds(360, 480, 240, 70);

        jLabel76.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel76.setText("VERSION INTERFACE 1.0");
        Cuentas.add(jLabel76);
        jLabel76.setBounds(1150, 580, 250, 30);

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel16.setText("Nombre(s) del usuario:");
        Cuentas.add(jLabel16);
        jLabel16.setBounds(280, 110, 270, 50);

        jLabel69.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel69.setText("ID Usuario:");
        Cuentas.add(jLabel69);
        jLabel69.setBounds(710, 240, 140, 50);

        jLabel70.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel70.setText("Apellido materno:");
        Cuentas.add(jLabel70);
        jLabel70.setBounds(970, 110, 210, 50);

        tNombres.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tNombres.setToolTipText("Escriba");
        tNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNombresActionPerformed(evt);
            }
        });
        Cuentas.add(tNombres);
        tNombres.setBounds(280, 170, 270, 30);

        lValidacionU.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lValidacionU.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lValidacionU.setText(" ");
        Cuentas.add(lValidacionU);
        lValidacionU.setBounds(420, 410, 270, 30);

        tUsuario.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tUsuario.setToolTipText("Escriba");
        tUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tUsuarioActionPerformed(evt);
            }
        });
        tUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tUsuarioKeyReleased(evt);
            }
        });
        Cuentas.add(tUsuario);
        tUsuario.setBounds(420, 380, 270, 30);

        tContraseña.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tContraseña.setToolTipText("Escriba");
        tContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tContraseñaActionPerformed(evt);
            }
        });
        Cuentas.add(tContraseña);
        tContraseña.setBounds(840, 380, 270, 30);

        jLabel72.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel72.setText("Contraseña:");
        Cuentas.add(jLabel72);
        jLabel72.setBounds(910, 320, 140, 50);

        tApellidoMaterno.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tApellidoMaterno.setToolTipText("Escriba");
        tApellidoMaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tApellidoMaternoActionPerformed(evt);
            }
        });
        Cuentas.add(tApellidoMaterno);
        tApellidoMaterno.setBounds(940, 170, 270, 30);

        tIDUsuario.setEditable(false);
        tIDUsuario.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tIDUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tIDUsuario.setToolTipText("Escriba");
        tIDUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tIDUsuarioActionPerformed(evt);
            }
        });
        Cuentas.add(tIDUsuario);
        tIDUsuario.setBounds(620, 290, 270, 30);

        bRegistrarSesion.setBackground(new java.awt.Color(255, 255, 255));
        bRegistrarSesion.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bRegistrarSesion.setText("Registrar");
        bRegistrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistrarSesionActionPerformed(evt);
            }
        });
        Cuentas.add(bRegistrarSesion);
        bRegistrarSesion.setBounds(670, 480, 240, 70);

        bEliminarUsuario.setBackground(new java.awt.Color(255, 255, 255));
        bEliminarUsuario.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bEliminarUsuario.setText("Eliminar");
        bEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarUsuarioActionPerformed(evt);
            }
        });
        Cuentas.add(bEliminarUsuario);
        bEliminarUsuario.setBounds(980, 480, 240, 70);

        tApellidoPaterno.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tApellidoPaterno.setToolTipText("Escriba");
        tApellidoPaterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tApellidoPaternoActionPerformed(evt);
            }
        });
        Cuentas.add(tApellidoPaterno);
        tApellidoPaterno.setBounds(620, 170, 270, 30);

        jLabel80.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel80.setText("Apellido paterno:");
        Cuentas.add(jLabel80);
        jLabel80.setBounds(650, 110, 210, 50);

        jLabel82.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel82.setText("Usuario: ");
        Cuentas.add(jLabel82);
        jLabel82.setBounds(500, 320, 120, 50);

        jInicio.add(Cuentas);
        Cuentas.setBounds(0, 90, 1370, 620);

        MesaPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        MesaPrincipal.setLayout(null);

        bSalirMesasPrincipales.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirMesasPrincipales.setForeground(new java.awt.Color(255, 255, 255));
        bSalirMesasPrincipales.setText("X");
        bSalirMesasPrincipales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirMesasPrincipalesActionPerformed(evt);
            }
        });
        MesaPrincipal.add(bSalirMesasPrincipales);
        bSalirMesasPrincipales.setBounds(1290, 10, 90, 60);

        lTituloMesa.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lTituloMesa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lTituloMesa.setText("Agregar pedido");
        MesaPrincipal.add(lTituloMesa);
        lTituloMesa.setBounds(190, 0, 1100, 80);

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));
        MesaPrincipal.add(jPanel8);
        jPanel8.setBounds(180, 10, 10, 610);

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));
        MesaPrincipal.add(jPanel9);
        jPanel9.setBounds(0, 0, 1400, 10);

        panelMesero4.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero4.setLayout(null);

        jLabel50.setBackground(new java.awt.Color(0, 0, 0));
        jLabel50.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel50.setText("M");
        panelMesero4.add(jLabel50);
        jLabel50.setBounds(50, 20, 120, 90);

        jLabel51.setBackground(new java.awt.Color(0, 0, 0));
        jLabel51.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel51.setText("E");
        panelMesero4.add(jLabel51);
        jLabel51.setBounds(50, 140, 100, 90);

        jLabel55.setBackground(new java.awt.Color(0, 0, 0));
        jLabel55.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel55.setText("S");
        panelMesero4.add(jLabel55);
        jLabel55.setBounds(50, 260, 70, 90);

        jLabel56.setBackground(new java.awt.Color(0, 0, 0));
        jLabel56.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel56.setText("A");
        panelMesero4.add(jLabel56);
        jLabel56.setBounds(50, 380, 100, 90);

        jLabel57.setBackground(new java.awt.Color(0, 0, 0));
        jLabel57.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel57.setText("S");
        panelMesero4.add(jLabel57);
        jLabel57.setBounds(50, 500, 100, 90);

        MesaPrincipal.add(panelMesero4);
        panelMesero4.setBounds(0, 0, 180, 620);

        jLabel53.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel53.setText("VERSION INTERFACE 2.0");
        MesaPrincipal.add(jLabel53);
        jLabel53.setBounds(1150, 580, 250, 30);

        bAgregarPedido.setBackground(new java.awt.Color(255, 255, 0));
        bAgregarPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bAgregarPedido.setText("Agregar pedido");
        bAgregarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarPedidoActionPerformed(evt);
            }
        });
        MesaPrincipal.add(bAgregarPedido);
        bAgregarPedido.setBounds(420, 310, 240, 50);

        jLabel34.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel34.setText("Categoria:");
        MesaPrincipal.add(jLabel34);
        jLabel34.setBounds(260, 230, 120, 32);

        jCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCategoriaActionPerformed(evt);
            }
        });
        MesaPrincipal.add(jCategoria);
        jCategoria.setBounds(420, 230, 140, 30);

        jLabel35.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel35.setText("Mesa:");
        MesaPrincipal.add(jLabel35);
        jLabel35.setBounds(570, 130, 80, 32);

        JProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JProductoActionPerformed(evt);
            }
        });
        MesaPrincipal.add(JProducto);
        JProducto.setBounds(770, 230, 180, 30);

        jLabel36.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel36.setText("Cantidad:");
        MesaPrincipal.add(jLabel36);
        jLabel36.setBounds(1030, 230, 120, 30);
        MesaPrincipal.add(sCantidad);
        sCantidad.setBounds(1170, 230, 60, 30);

        jLabel47.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel47.setText("Precio: $");
        MesaPrincipal.add(jLabel47);
        jLabel47.setBounds(1010, 320, 100, 32);

        MesaTabla.setBackground(new java.awt.Color(255, 255, 0));
        MesaTabla.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MesaTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(MesaTabla);

        MesaPrincipal.add(jScrollPane1);
        jScrollPane1.setBounds(210, 380, 1150, 190);

        jLabel71.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel71.setText("Producto:");
        MesaPrincipal.add(jLabel71);
        jLabel71.setBounds(630, 220, 140, 40);

        MesaPrincipal.add(cMeseroMesas);
        cMeseroMesas.setBounds(990, 130, 250, 30);

        jLabel83.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel83.setText("Mesero:");
        MesaPrincipal.add(jLabel83);
        jLabel83.setBounds(890, 130, 100, 32);

        tTicketMesas.setEditable(false);
        tTicketMesas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tTicketMesas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tTicketMesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tTicketMesasActionPerformed(evt);
            }
        });
        MesaPrincipal.add(tTicketMesas);
        tTicketMesas.setBounds(370, 130, 110, 30);

        jLabel84.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel84.setText("Ticket:");
        MesaPrincipal.add(jLabel84);
        jLabel84.setBounds(260, 130, 140, 32);

        MesaPrincipal.add(cMesa);
        cMesa.setBounds(650, 130, 170, 30);

        bEnviarPedido.setBackground(new java.awt.Color(255, 255, 0));
        bEnviarPedido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bEnviarPedido.setText("Enviar pedido");
        bEnviarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnviarPedidoActionPerformed(evt);
            }
        });
        MesaPrincipal.add(bEnviarPedido);
        bEnviarPedido.setBounds(730, 310, 240, 50);

        tPrecioMesa.setEditable(false);
        MesaPrincipal.add(tPrecioMesa);
        tPrecioMesa.setBounds(1110, 320, 140, 30);

        jInicio.add(MesaPrincipal);
        MesaPrincipal.setBounds(0, 90, 1380, 620);

        Productos.setBackground(new java.awt.Color(255, 255, 255));
        Productos.setLayout(null);

        bSalirProductos.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirProductos.setForeground(new java.awt.Color(255, 255, 255));
        bSalirProductos.setText("X");
        bSalirProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSalirProductosMouseClicked(evt);
            }
        });
        bSalirProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirProductosActionPerformed(evt);
            }
        });
        Productos.add(bSalirProductos);
        bSalirProductos.setBounds(1290, 10, 90, 60);

        jPanel12.setBackground(new java.awt.Color(0, 0, 0));
        Productos.add(jPanel12);
        jPanel12.setBounds(660, 0, 10, 620);

        jPanel13.setBackground(new java.awt.Color(0, 0, 0));
        Productos.add(jPanel13);
        jPanel13.setBounds(0, 0, 1400, 10);

        panelMesero6.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero6.setLayout(null);

        jLabel65.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel65.setText("CATEGORIA");
        panelMesero6.add(jLabel65);
        jLabel65.setBounds(160, 10, 320, 80);

        tIDCategoria.setEditable(false);
        tIDCategoria.setBackground(new java.awt.Color(255, 255, 255));
        tIDCategoria.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        panelMesero6.add(tIDCategoria);
        tIDCategoria.setBounds(40, 200, 180, 40);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setText("ID Categoria");
        panelMesero6.add(jLabel14);
        jLabel14.setBounds(70, 160, 130, 30);

        bRegistrarCategoria.setText("Registrar categoria");
        bRegistrarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistrarCategoriaActionPerformed(evt);
            }
        });
        panelMesero6.add(bRegistrarCategoria);
        bRegistrarCategoria.setBounds(170, 280, 270, 60);

        tTablaCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tTablaCategoria);

        panelMesero6.add(jScrollPane3);
        jScrollPane3.setBounds(80, 390, 450, 150);

        lValidacionC.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lValidacionC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelMesero6.add(lValidacionC);
        lValidacionC.setBounds(320, 240, 290, 30);

        tEscribirCategoria.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        tEscribirCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tEscribirCategoriaKeyReleased(evt);
            }
        });
        panelMesero6.add(tEscribirCategoria);
        tEscribirCategoria.setBounds(320, 200, 290, 38);

        jLabel81.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel81.setText("Escribe el nombre de tu categoria:");
        panelMesero6.add(jLabel81);
        jLabel81.setBounds(320, 160, 310, 30);

        Productos.add(panelMesero6);
        panelMesero6.setBounds(0, 0, 660, 620);

        jLabel66.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel66.setText("PRODUCTO");
        Productos.add(jLabel66);
        jLabel66.setBounds(910, 10, 290, 80);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setText("Id producto:");
        Productos.add(jLabel13);
        jLabel13.setBounds(730, 110, 120, 30);

        tID_Productos.setEditable(false);
        tID_Productos.setBackground(new java.awt.Color(255, 255, 255));
        tID_Productos.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        Productos.add(tID_Productos);
        tID_Productos.setBounds(710, 150, 150, 38);

        tPrecioProducto.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        Productos.add(tPrecioProducto);
        tPrecioProducto.setBounds(1070, 270, 170, 40);

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel17.setText("Precio:");
        Productos.add(jLabel17);
        jLabel17.setBounds(1120, 230, 70, 30);

        jLabel67.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel67.setText("Nombre del producto:");
        Productos.add(jLabel67);
        jLabel67.setBounds(1040, 110, 210, 30);

        Productos.add(jCategoriaProducto);
        jCategoriaProducto.setBounds(700, 270, 250, 50);

        jLabel68.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel68.setText("Categoria del producto:");
        Productos.add(jLabel68);
        jLabel68.setBounds(720, 230, 210, 30);

        tNombreproducto.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        tNombreproducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tNombreproductoKeyReleased(evt);
            }
        });
        Productos.add(tNombreproducto);
        tNombreproducto.setBounds(990, 150, 300, 38);

        bRegistroProducto.setText("Registrar productos");
        bRegistroProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistroProductoActionPerformed(evt);
            }
        });
        Productos.add(bRegistroProducto);
        bRegistroProducto.setBounds(890, 360, 320, 60);

        tTablaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tTablaProducto);

        Productos.add(jScrollPane5);
        jScrollPane5.setBounds(750, 460, 560, 120);

        jLabel73.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel73.setText("VERSION INTERFACE 1.2");
        Productos.add(jLabel73);
        jLabel73.setBounds(1150, 590, 250, 30);

        lValidacionP.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lValidacionP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Productos.add(lValidacionP);
        lValidacionP.setBounds(990, 190, 300, 30);

        jInicio.add(Productos);
        Productos.setBounds(0, 90, 1380, 620);

        Reporte.setBackground(new java.awt.Color(255, 255, 255));
        Reporte.setLayout(null);

        bSalirReporte.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirReporte.setForeground(new java.awt.Color(255, 255, 255));
        bSalirReporte.setText("X");
        bSalirReporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bSalirReporteMouseClicked(evt);
            }
        });
        bSalirReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirReporteActionPerformed(evt);
            }
        });
        Reporte.add(bSalirReporte);
        bSalirReporte.setBounds(1280, 10, 90, 60);

        jLabel49.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel49.setText("Reporte");
        Reporte.add(jLabel49);
        jLabel49.setBounds(700, 10, 190, 80);

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        Reporte.add(jPanel10);
        jPanel10.setBounds(180, 10, 10, 610);

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));
        Reporte.add(jPanel11);
        jPanel11.setBounds(0, 0, 1400, 10);

        panelMesero5.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero5.setLayout(null);

        jLabel58.setBackground(new java.awt.Color(0, 0, 0));
        jLabel58.setFont(new java.awt.Font("Dialog", 1, 65)); // NOI18N
        jLabel58.setText("E");
        panelMesero5.add(jLabel58);
        jLabel58.setBounds(60, 530, 70, 80);

        jLabel59.setBackground(new java.awt.Color(0, 0, 0));
        jLabel59.setFont(new java.awt.Font("Dialog", 1, 65)); // NOI18N
        jLabel59.setText("R");
        panelMesero5.add(jLabel59);
        jLabel59.setBounds(70, 10, 90, 80);

        jLabel60.setBackground(new java.awt.Color(0, 0, 0));
        jLabel60.setFont(new java.awt.Font("Dialog", 1, 65)); // NOI18N
        jLabel60.setText("E");
        panelMesero5.add(jLabel60);
        jLabel60.setBounds(70, 90, 90, 80);

        jLabel61.setBackground(new java.awt.Color(0, 0, 0));
        jLabel61.setFont(new java.awt.Font("Dialog", 1, 65)); // NOI18N
        jLabel61.setText("P");
        panelMesero5.add(jLabel61);
        jLabel61.setBounds(70, 180, 100, 80);

        jLabel62.setBackground(new java.awt.Color(0, 0, 0));
        jLabel62.setFont(new java.awt.Font("Dialog", 1, 65)); // NOI18N
        jLabel62.setText("O");
        panelMesero5.add(jLabel62);
        jLabel62.setBounds(60, 270, 70, 80);

        jLabel63.setBackground(new java.awt.Color(0, 0, 0));
        jLabel63.setFont(new java.awt.Font("Dialog", 1, 65)); // NOI18N
        jLabel63.setText("R");
        panelMesero5.add(jLabel63);
        jLabel63.setBounds(60, 360, 70, 80);

        jLabel64.setBackground(new java.awt.Color(0, 0, 0));
        jLabel64.setFont(new java.awt.Font("Dialog", 1, 65)); // NOI18N
        jLabel64.setText("T");
        panelMesero5.add(jLabel64);
        jLabel64.setBounds(60, 450, 70, 80);

        Reporte.add(panelMesero5);
        panelMesero5.setBounds(0, 0, 180, 620);

        jLabel54.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel54.setText("VERSION INTERFACE 1.2");
        Reporte.add(jLabel54);
        jLabel54.setBounds(1150, 580, 250, 30);

        jButton6.setBackground(new java.awt.Color(255, 255, 0));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("Enviar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        Reporte.add(jButton6);
        jButton6.setBounds(940, 160, 240, 50);

        MesaTabla1.setBackground(new java.awt.Color(255, 255, 0));
        MesaTabla1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MesaTabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(MesaTabla1);

        Reporte.add(jScrollPane2);
        jScrollPane2.setBounds(210, 310, 1140, 220);

        jLabel52.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel52.setText("Fecha a generar:");
        Reporte.add(jLabel52);
        jLabel52.setBounds(420, 160, 200, 40);

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Reporte.add(jComboBox8);
        jComboBox8.setBounds(640, 170, 230, 30);

        jInicio.add(Reporte);
        Reporte.setBounds(0, 90, 1370, 620);

        Comparativa.setBackground(new java.awt.Color(255, 255, 255));
        Comparativa.setLayout(null);

        bSalirComparativa.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirComparativa.setForeground(new java.awt.Color(255, 255, 255));
        bSalirComparativa.setText("X");
        bSalirComparativa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirComparativaActionPerformed(evt);
            }
        });
        Comparativa.add(bSalirComparativa);
        bSalirComparativa.setBounds(1280, 10, 90, 60);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel21.setText("Comparativa");
        Comparativa.add(jLabel21);
        jLabel21.setBounds(670, 0, 400, 80);

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        Comparativa.add(jPanel6);
        jPanel6.setBounds(360, 10, 10, 610);

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        Comparativa.add(jPanel7);
        jPanel7.setBounds(0, 0, 1400, 10);

        panelMesero3.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero3.setLayout(null);

        jLabel37.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel37.setText("------------RELLENO-------------");
        panelMesero3.add(jLabel37);
        jLabel37.setBounds(50, 560, 250, 40);

        jLabel42.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel42.setText("Resultado comparativa:");
        panelMesero3.add(jLabel42);
        jLabel42.setBounds(40, 30, 290, 40);

        jLabel43.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel43.setText("Producto 1 (Name): $$$");
        panelMesero3.add(jLabel43);
        jLabel43.setBounds(30, 140, 210, 40);

        jLabel44.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel44.setText("Producto 2 (Name): $$$");
        panelMesero3.add(jLabel44);
        jLabel44.setBounds(30, 230, 220, 40);

        jLabel45.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel45.setText("------------RELLENO-------------");
        panelMesero3.add(jLabel45);
        jLabel45.setBounds(50, 380, 250, 40);

        jLabel46.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel46.setText("------------RELLENO-------------");
        panelMesero3.add(jLabel46);
        jLabel46.setBounds(50, 470, 250, 40);

        Comparativa.add(panelMesero3);
        panelMesero3.setBounds(0, 0, 360, 620);

        jLabel38.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel38.setText("VERSION INTERFACE 1.1");
        Comparativa.add(jLabel38);
        jLabel38.setBounds(1150, 580, 250, 30);

        cComparativaCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cComparativaComboMouseClicked(evt);
            }
        });
        cComparativaCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cComparativaComboActionPerformed(evt);
            }
        });
        Comparativa.add(cComparativaCombo);
        cComparativaCombo.setBounds(900, 160, 270, 30);

        jLabel39.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel39.setText("Seleccione el producto 1:");
        Comparativa.add(jLabel39);
        jLabel39.setBounds(420, 310, 300, 70);

        jSeleccionProducto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSeleccionProducto1ActionPerformed(evt);
            }
        });
        Comparativa.add(jSeleccionProducto1);
        jSeleccionProducto1.setBounds(730, 330, 270, 30);

        jLabel40.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel40.setText("Seleccione el producto 2:");
        Comparativa.add(jLabel40);
        jLabel40.setBounds(440, 420, 300, 70);

        Comparativa.add(jSeleccionProducto2);
        jSeleccionProducto2.setBounds(750, 440, 270, 30);

        jLabel8.setText("La cantidad de producto: number_producto");
        Comparativa.add(jLabel8);
        jLabel8.setBounds(1050, 430, 290, 40);

        jLabel27.setText("La cantidad de producto: number_producto");
        Comparativa.add(jLabel27);
        jLabel27.setBounds(1040, 320, 290, 40);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        Comparativa.add(jSeparator1);
        jSeparator1.setBounds(370, 242, 1000, 10);

        jButton3.setText("Enviar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        Comparativa.add(jButton3);
        jButton3.setBounds(700, 550, 240, 50);

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel41.setText("Seleccione la categoria del producto:");
        Comparativa.add(jLabel41);
        jLabel41.setBounds(450, 140, 430, 70);

        jInicio.add(Comparativa);
        Comparativa.setBounds(0, 90, 1370, 620);

        Sillas.setBackground(new java.awt.Color(255, 255, 255));
        Sillas.setLayout(null);

        bSalirMesas.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirMesas.setForeground(new java.awt.Color(255, 255, 255));
        bSalirMesas.setText("X");
        bSalirMesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirMesasActionPerformed(evt);
            }
        });
        Sillas.add(bSalirMesas);
        bSalirMesas.setBounds(1280, 10, 90, 60);

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel20.setText("JUNTAR MESAS");
        Sillas.add(jLabel20);
        jLabel20.setBounds(620, 0, 400, 80);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        Sillas.add(jPanel4);
        jPanel4.setBounds(140, 10, 10, 610);

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));
        Sillas.add(jPanel5);
        jPanel5.setBounds(0, 0, 1400, 10);

        panelMesero2.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero2.setLayout(null);

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel22.setText("S");
        panelMesero2.add(jLabel22);
        jLabel22.setBounds(30, 500, 100, 90);

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel23.setText("M");
        panelMesero2.add(jLabel23);
        jLabel23.setBounds(20, 20, 100, 90);

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel24.setText("E");
        panelMesero2.add(jLabel24);
        jLabel24.setBounds(30, 140, 100, 90);

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel25.setText("S");
        panelMesero2.add(jLabel25);
        jLabel25.setBounds(30, 260, 70, 90);

        jLabel26.setBackground(new java.awt.Color(0, 0, 0));
        jLabel26.setFont(new java.awt.Font("Dialog", 1, 100)); // NOI18N
        jLabel26.setText("A");
        panelMesero2.add(jLabel26);
        jLabel26.setBounds(30, 380, 100, 90);

        Sillas.add(panelMesero2);
        panelMesero2.setBounds(0, 0, 140, 620);

        jLabel28.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel28.setText("Seleccione las mesa 1:");
        Sillas.add(jLabel28);
        jLabel28.setBounds(220, 130, 270, 60);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Juntar");
        Sillas.add(jButton4);
        jButton4.setBounds(670, 390, 220, 70);

        jLabel31.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel31.setText("VERSION INTERFACE 1.1");
        Sillas.add(jLabel31);
        jLabel31.setBounds(1150, 580, 250, 30);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Sillas.add(jComboBox1);
        jComboBox1.setBounds(1040, 140, 140, 40);

        jLabel32.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel32.setText("Seleccione las mesa 2:");
        Sillas.add(jLabel32);
        jLabel32.setBounds(770, 130, 270, 60);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Sillas.add(jComboBox2);
        jComboBox2.setBounds(500, 140, 140, 40);

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel29.setText("Seleccione las mesa 3:");
        Sillas.add(jLabel29);
        jLabel29.setBounds(220, 240, 270, 60);

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Sillas.add(jComboBox3);
        jComboBox3.setBounds(500, 250, 140, 40);

        jLabel30.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel30.setText("Seleccione las mesa 4:");
        Sillas.add(jLabel30);
        jLabel30.setBounds(770, 240, 270, 60);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Sillas.add(jComboBox4);
        jComboBox4.setBounds(1050, 250, 140, 40);

        jInicio.add(Sillas);
        Sillas.setBounds(0, 90, 1370, 620);

        Meseros.setBackground(new java.awt.Color(255, 255, 255));
        Meseros.setLayout(null);

        bSalirMeseros.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        bSalirMeseros.setForeground(new java.awt.Color(255, 255, 255));
        bSalirMeseros.setText("X");
        bSalirMeseros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirMeserosActionPerformed(evt);
            }
        });
        Meseros.add(bSalirMeseros);
        bSalirMeseros.setBounds(1280, 10, 90, 60);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel7.setText("REGISTRO MESEROS");
        Meseros.add(jLabel7);
        jLabel7.setBounds(620, 0, 520, 80);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel9.setText("ID unico:");
        Meseros.add(jLabel9);
        jLabel9.setBounds(990, 140, 110, 50);

        tID_Meseros.setEditable(false);
        tID_Meseros.setBackground(new java.awt.Color(255, 255, 255));
        tID_Meseros.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tID_Meseros.setToolTipText("Escriba");
        Meseros.add(tID_Meseros);
        tID_Meseros.setBounds(1100, 150, 210, 30);

        tNombre_Mesero.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tNombre_Mesero.setToolTipText("Escriba");
        tNombre_Mesero.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tNombre_MeseroFocusGained(evt);
            }
        });
        Meseros.add(tNombre_Mesero);
        tNombre_Mesero.setBounds(670, 150, 260, 30);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        Meseros.add(jPanel3);
        jPanel3.setBounds(370, 10, 10, 610);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        Meseros.add(jPanel2);
        jPanel2.setBounds(0, 0, 1400, 10);

        panelMesero1.setBackground(new java.awt.Color(255, 255, 0));
        panelMesero1.setLayout(null);

        FechaActualMesero.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        FechaActualMesero.setText("Fecha actual:");
        panelMesero1.add(FechaActualMesero);
        FechaActualMesero.setBounds(20, 440, 330, 40);

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Meseros actuales");
        panelMesero1.add(jLabel18);
        jLabel18.setBounds(30, 10, 270, 50);

        tmostrarMeseros.setBackground(new java.awt.Color(255, 255, 0));
        tmostrarMeseros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Meseros"
            }
        ));
        jScrollPane4.setViewportView(tmostrarMeseros);

        panelMesero1.add(jScrollPane4);
        jScrollPane4.setBounds(20, 73, 330, 350);

        Meseros.add(panelMesero1);
        panelMesero1.setBounds(0, 0, 370, 620);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel11.setText("Nombre(s) del mesero:");
        Meseros.add(jLabel11);
        jLabel11.setBounds(400, 140, 270, 50);

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel12.setText("Apellido paterno:");
        Meseros.add(jLabel12);
        jLabel12.setBounds(410, 290, 210, 50);

        tApellidoP.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tApellidoP.setToolTipText("Escriba");
        Meseros.add(tApellidoP);
        tApellidoP.setBounds(620, 300, 220, 30);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel19.setText("Apellido materno:");
        Meseros.add(jLabel19);
        jLabel19.setBounds(890, 290, 210, 50);

        tApellidoM.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tApellidoM.setToolTipText("Escriba");
        Meseros.add(tApellidoM);
        tApellidoM.setBounds(1100, 300, 210, 30);

        bRegistrarMesero.setBackground(new java.awt.Color(255, 255, 255));
        bRegistrarMesero.setText("Registrar");
        bRegistrarMesero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRegistrarMeseroActionPerformed(evt);
            }
        });
        Meseros.add(bRegistrarMesero);
        bRegistrarMesero.setBounds(970, 460, 220, 70);

        bEliminarMesero.setBackground(new java.awt.Color(255, 255, 255));
        bEliminarMesero.setText("Eliminar usuario");
        bEliminarMesero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarMeseroActionPerformed(evt);
            }
        });
        Meseros.add(bEliminarMesero);
        bEliminarMesero.setBounds(600, 460, 220, 70);

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setText("VERSION INTERFACE 1.2");
        Meseros.add(jLabel10);
        jLabel10.setBounds(1150, 580, 250, 30);

        jInicio.add(Meseros);
        Meseros.setBounds(0, 90, 1370, 620);

        jPreInformacion.setBackground(new java.awt.Color(0, 153, 255));
        jPreInformacion.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Gastado: $0");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 220, 120, 30);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Numero de mesa: number");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 150, 240, 30);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Estatus: Activo");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 80, 150, 30);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Informacion prevista de la mesa");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 10, 320, 30);

        jPreInformacion.add(jPanel1);
        jPanel1.setBounds(20, 10, 320, 600);

        jInicio.add(jPreInformacion);
        jPreInformacion.setBounds(1020, 90, 360, 620);

        jTiempo1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jInicio.add(jTiempo1);
        jTiempo1.setBounds(1150, 680, 230, 30);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel2.setText("VERSION BETA 2.00");
        jInicio.add(jLabel2);
        jLabel2.setBounds(1130, 650, 240, 50);

        Mesas.setBackground(new java.awt.Color(255, 255, 255));
        Mesas.setLayout(null);

        Mesa1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Mesa1.setText("Mesa 1");
        Mesas.add(Mesa1);
        Mesa1.setBounds(30, 40, 80, 30);

        Mesa2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Mesa2.setText("Mesa 2");
        Mesa2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Mesa2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Mesa2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Mesa2MouseExited(evt);
            }
        });
        Mesas.add(Mesa2);
        Mesa2.setBounds(150, 40, 90, 30);

        Mesa3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Mesa3.setText("Mesa 3");
        Mesa3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Mesa3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Mesa3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Mesa3MouseExited(evt);
            }
        });
        Mesas.add(Mesa3);
        Mesa3.setBounds(270, 40, 90, 30);

        Mesa4.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Mesa4.setText("Mesa 4");
        Mesa4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Mesa4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Mesa4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Mesa4MouseExited(evt);
            }
        });
        Mesas.add(Mesa4);
        Mesa4.setBounds(390, 40, 90, 30);

        Mesa5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        Mesa5.setText("Mesa 5");
        Mesas.add(Mesa5);
        Mesa5.setBounds(520, 40, 90, 30);

        bPagarMesa.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bPagarMesa.setText("Pagar Pedido");
        Mesas.add(bPagarMesa);
        bPagarMesa.setBounds(1160, 10, 190, 40);

        bAgregarMesa.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bAgregarMesa.setText("Agregar Pedido");
        bAgregarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarMesaActionPerformed(evt);
            }
        });
        Mesas.add(bAgregarMesa);
        bAgregarMesa.setBounds(710, 10, 180, 40);

        bModificarMesa.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        bModificarMesa.setText("Modificar Pedido");
        bModificarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarMesaActionPerformed(evt);
            }
        });
        Mesas.add(bModificarMesa);
        bModificarMesa.setBounds(920, 10, 210, 40);

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        Mesas.add(jSeparator2);
        jSeparator2.setBounds(670, 0, 10, 620);

        PedidosEnVivo.setBackground(new java.awt.Color(255, 255, 0));
        PedidosEnVivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PedidosEnVivoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PedidosEnVivoMouseExited(evt);
            }
        });
        PedidosEnVivo.setLayout(null);

        lll.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        lll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lll.setText("PEDIDOS EN VIVO");
        PedidosEnVivo.add(lll);
        lll.setBounds(70, 10, 450, 70);

        TablaEnVivo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        TablaEnVivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "MESA", "TICKET"
            }
        ));
        TablaEnVivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                TablaEnVivoMouseEntered(evt);
            }
        });
        jScrollPane8.setViewportView(TablaEnVivo);

        PedidosEnVivo.add(jScrollPane8);
        jScrollPane8.setBounds(50, 90, 540, 360);

        lCirculo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lCirculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/58afdad6829958a978a4a693(1).png"))); // NOI18N
        PedidosEnVivo.add(lCirculo);
        lCirculo.setBounds(520, 20, 50, 50);

        Mesas.add(PedidosEnVivo);
        PedidosEnVivo.setBounds(710, 70, 640, 490);

        jInicio.add(Mesas);
        Mesas.setBounds(10, 90, 1370, 620);

        jMenu.setBackground(new java.awt.Color(255, 255, 0));
        jMenu.setLayout(null);

        jTitulo.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/1663952285593 (2).png"))); // NOI18N
        jTitulo.setText("GALERAS");
        jMenu.add(jTitulo);
        jTitulo.setBounds(20, 0, 250, 90);

        jMesas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jMesas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/imagen_2022-09-26_113114959.png"))); // NOI18N
        jMesas.setText("Mesas");
        jMesas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMesasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMesasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMesasMouseExited(evt);
            }
        });
        jMenu.add(jMesas);
        jMesas.setBounds(310, 30, 100, 30);

        jComparativa.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jComparativa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/imagen_2022-10-03_100700234.png"))); // NOI18N
        jComparativa.setText("Comparativa");
        jComparativa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComparativaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jComparativaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jComparativaMouseExited(evt);
            }
        });
        jMenu.add(jComparativa);
        jComparativa.setBounds(440, 30, 160, 30);

        jProductos.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/imagen_2022-10-03_094538812.png"))); // NOI18N
        jProductos.setText("Productos");
        jProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jProductosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jProductosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jProductosMouseExited(evt);
            }
        });
        jMenu.add(jProductos);
        jProductos.setBounds(630, 30, 130, 30);

        jReporte.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/imagen_2022-09-26_235325867.png"))); // NOI18N
        jReporte.setText("Reporte");
        jReporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jReporteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jReporteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jReporteMouseExited(evt);
            }
        });
        jMenu.add(jReporte);
        jReporte.setBounds(800, 30, 110, 30);

        jMeseros.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jMeseros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/imagen_2022-10-19_100343372.png"))); // NOI18N
        jMeseros.setText("Meseros");
        jMeseros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMeserosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMeserosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jMeserosMouseExited(evt);
            }
        });
        jMenu.add(jMeseros);
        jMeseros.setBounds(950, 30, 110, 30);

        jCuentas.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jCuentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galera/Imagen/imagen_2022-11-05_154312856.png"))); // NOI18N
        jCuentas.setText("Cuentas");
        jCuentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCuentasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jCuentasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jCuentasMouseExited(evt);
            }
        });
        jMenu.add(jCuentas);
        jCuentas.setBounds(1100, 30, 110, 30);

        lUsuario.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        lUsuario.setText("Usuario:");
        lUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lUsuarioMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lUsuarioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lUsuarioMouseExited(evt);
            }
        });
        jMenu.add(lUsuario);
        lUsuario.setBounds(1190, 0, 170, 20);

        userInfo.setBackground(new java.awt.Color(255, 255, 255));
        userInfo.setLayout(null);

        lCerrarSesion.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        lCerrarSesion.setText("Cerrar sesion");
        lCerrarSesion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lCerrarSesionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lCerrarSesionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lCerrarSesionMouseExited(evt);
            }
        });
        userInfo.add(lCerrarSesion);
        lCerrarSesion.setBounds(0, 20, 90, 15);

        lUserInfo.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        lUserInfo.setText("Ver informacion");
        lUserInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lUserInfoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lUserInfoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lUserInfoMouseExited(evt);
            }
        });
        userInfo.add(lUserInfo);
        lUserInfo.setBounds(0, 0, 90, 15);

        jMenu.add(userInfo);
        userInfo.setBounds(1230, 20, 120, 40);

        jInicio.add(jMenu);
        jMenu.setBounds(10, 0, 1370, 90);

        jInicioSesion.setLayout(null);

        jTiempo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jInicioSesion.add(jTiempo);
        jTiempo.setBounds(440, 60, 670, 40);

        lGaleras.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lGaleras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lGaleras.setText("BIENVENIDO A GALERAS");
        jInicioSesion.add(lGaleras);
        lGaleras.setBounds(30, 0, 1310, 60);

        jInicio.add(jInicioSesion);
        jInicioSesion.setBounds(10, 310, 1370, 110);

        getContentPane().add(jInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 1380, 710));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMesasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMesasMouseEntered
        jMenu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jMesasMouseEntered

    private void jMesasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMesasMouseExited
        jMenu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jMesasMouseExited

    private void jMesasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMesasMouseClicked
        this.setTitle("Galeras | Juntar mesas");
        Productos.setVisible(false);
        Sillas.setVisible(true);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        MesaPrincipal.setVisible(false);
        Mesas.setVisible(false);
        Comparativa.setVisible(false);
        Cuentas.setVisible(false);
        User.setVisible(false);
        bAgregarMesa.setVisible(false);
        bModificarMesa.setVisible(false);
        bPagarMesa.setVisible(false);
        PedidosEnVivo.setVisible(false);
        
    }//GEN-LAST:event_jMesasMouseClicked

    private void jComparativaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComparativaMouseClicked
        this.setTitle("Galeras | Comparativa");
        Productos.setVisible(false);
        Comparativa.setVisible(true);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        MesaPrincipal.setVisible(false);
        Mesas.setVisible(false);
        Cuentas.setVisible(false);
        User.setVisible(false);
        bAgregarMesa.setVisible(false);
        bModificarMesa.setVisible(false);
        bPagarMesa.setVisible(false);
        PedidosEnVivo.setVisible(false);
    }//GEN-LAST:event_jComparativaMouseClicked

    private void jComparativaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComparativaMouseEntered
        jMenu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jComparativaMouseEntered

    private void jComparativaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComparativaMouseExited
        jMenu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jComparativaMouseExited

    private void jProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProductosMouseClicked
        this.setTitle("Galeras | Categorias & Productos");
        Productos.setVisible(true);
        Reporte.setVisible(false);
        Meseros.setVisible(false);
        MesaPrincipal.setVisible(false);
        Comparativa.setVisible(false);
        Sillas.setVisible(false);
        Mesas.setVisible(false);
        Cuentas.setVisible(false);
        User.setVisible(false);
        bAgregarMesa.setVisible(false);
        bModificarMesa.setVisible(false);
        bPagarMesa.setVisible(false);
        PedidosEnVivo.setVisible(false);
    }//GEN-LAST:event_jProductosMouseClicked

    private void jProductosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProductosMouseEntered
        jMenu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jProductosMouseEntered

    private void jProductosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProductosMouseExited
        jMenu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jProductosMouseExited

    private void jReporteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jReporteMouseClicked
        this.setTitle("Galeras | Reporte");
        Productos.setVisible(false);
        Reporte.setVisible(true);
        Meseros.setVisible(false);
        MesaPrincipal.setVisible(false);
        Comparativa.setVisible(false);
        Sillas.setVisible(false);
        Mesas.setVisible(false);
        Cuentas.setVisible(false);
        User.setVisible(false);
        bAgregarMesa.setVisible(false);
        bModificarMesa.setVisible(false);
        bPagarMesa.setVisible(false);
        PedidosEnVivo.setVisible(false);
    }//GEN-LAST:event_jReporteMouseClicked

    private void jReporteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jReporteMouseEntered
        jMenu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jReporteMouseEntered

    private void jReporteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jReporteMouseExited
        jMenu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jReporteMouseExited

    private void Mesa2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa2MouseClicked

    }//GEN-LAST:event_Mesa2MouseClicked

    private void Mesa2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa2MouseEntered

    }//GEN-LAST:event_Mesa2MouseEntered

    private void Mesa2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa2MouseExited

    }//GEN-LAST:event_Mesa2MouseExited

    private void Mesa3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa3MouseClicked

    }//GEN-LAST:event_Mesa3MouseClicked

    private void Mesa3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa3MouseEntered

    }//GEN-LAST:event_Mesa3MouseEntered

    private void Mesa3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa3MouseExited

    }//GEN-LAST:event_Mesa3MouseExited

    private void Mesa4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa4MouseClicked

    }//GEN-LAST:event_Mesa4MouseClicked

    private void Mesa4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa4MouseEntered

    }//GEN-LAST:event_Mesa4MouseEntered

    private void Mesa4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Mesa4MouseExited

    }//GEN-LAST:event_Mesa4MouseExited

    private void jMeserosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMeserosMouseClicked
        this.setTitle("Galeras | Meseros");
        Productos.setVisible(false);
        Meseros.setVisible(true);
        MesaPrincipal.setVisible(false);
        Comparativa.setVisible(false);
        Reporte.setVisible(false);
        Sillas.setVisible(false);
        Mesas.setVisible(false);
        Cuentas.setVisible(false);
        User.setVisible(false);
        bAgregarMesa.setVisible(false);
        bModificarMesa.setVisible(false);
        bPagarMesa.setVisible(false);
        PedidosEnVivo.setVisible(false);
    }//GEN-LAST:event_jMeserosMouseClicked

    private void jMeserosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMeserosMouseEntered
        jMenu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jMeserosMouseEntered

    private void jMeserosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMeserosMouseExited
        jMenu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jMeserosMouseExited

    private void bSalirMeserosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirMeserosActionPerformed
        this.setTitle("Galeras | Inicio");
        Productos.setVisible(false);
        Sillas.setVisible(false);
        MesaPrincipal.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirMeserosActionPerformed

    private void bSalirMesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirMesasActionPerformed
        this.setTitle("Galeras | Inicio");
        Productos.setVisible(false);
        Sillas.setVisible(false);
        MesaPrincipal.setVisible(false);
        Reporte.setVisible(false);
        Meseros.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirMesasActionPerformed

    private void bSalirComparativaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirComparativaActionPerformed
        this.setTitle("Galeras | Inicio");
        Productos.setVisible(false);
        Sillas.setVisible(false);
        Reporte.setVisible(false);
        Meseros.setVisible(false);
        MesaPrincipal.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirComparativaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Ya se realiso la comparativa");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void bSalirMesasPrincipalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirMesasPrincipalesActionPerformed
        this.setTitle("Galeras | Inicio");
        this.aparacerDesaparecerMesas(0);
        MesaTabla.removeAll();
        this.EliminarTicket(Integer.parseInt(tTicketMesas.getText()), Integer.parseInt((String) cMesa.getSelectedItem()));
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirMesasPrincipalesActionPerformed

    private void bAgregarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarPedidoActionPerformed
        if(Integer.parseInt((String) cMesa.getSelectedItem()) == 1){
            int precio_t = Integer.parseInt(tPrecioMesa.getText());
            int cantidad_t = Integer.parseInt(sCantidad.getValue().toString());
            int total_t = precio_t*cantidad_t;
            this.registroTicket(Integer.parseInt(tTicketMesas.getText()), this.comboProducto(), Integer.parseInt((String) cMesa.getSelectedItem()), Integer.parseInt(tPrecioMesa.getText()), Integer.parseInt(sCantidad.getValue().toString()), total_t);
            this.mostrarPedidosTicket(Integer.parseInt(tTicketMesas.getText()));
        }else{
            int precio_t = Integer.parseInt(tPrecioMesa.getText());
            int cantidad_t = Integer.parseInt(sCantidad.getValue().toString());
            int total_t = precio_t*cantidad_t;
            this.registroTicket(Integer.parseInt(tTicketMesas.getText()), this.comboProducto(), Integer.parseInt((String) cMesa.getSelectedItem()), Integer.parseInt(tPrecioMesa.getText()), Integer.parseInt(sCantidad.getValue().toString()), total_t);          
            this.mostrarPedidosTicket(Integer.parseInt(tTicketMesas.getText()));
        }
    }//GEN-LAST:event_bAgregarPedidoActionPerformed

    private void jCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCategoriaActionPerformed
        int id_mesas = jCategoria.getSelectedIndex();
        if(id_mesas == 0){
            this.consultaMesas(1);
        }else if(id_mesas == 1){
            this.consultaMesas(2);
        }else if(id_mesas == 2){
            this.consultaMesas(3);
        }else if(id_mesas == 3){
            this.consultaMesas(4);
        }else if(id_mesas == 4){
            this.consultaMesas(5);
        }else if(id_mesas == 5){
            this.consultaMesas(6);
        }
    }//GEN-LAST:event_jCategoriaActionPerformed

    private void bSalirReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirReporteActionPerformed
        this.setTitle("Galeras | Inicio");
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_bSalirReporteActionPerformed

    private void bSalirReporteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSalirReporteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bSalirReporteMouseClicked

    private void bRegistrarMeseroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegistrarMeseroActionPerformed
        String id_S = tID_Meseros.getText();
        int idM = Integer.parseInt(id_S);
        String nombre = tNombre_Mesero.getText();
        String apellidoP = tApellidoP.getText();
        String apellidoM = tApellidoM.getText();
        this.agregarMesero(idM, nombre, apellidoP, apellidoM);
    }//GEN-LAST:event_bRegistrarMeseroActionPerformed

    private void tNombre_MeseroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tNombre_MeseroFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tNombre_MeseroFocusGained

    private void bEliminarMeseroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarMeseroActionPerformed
        JOptionPane.showMessageDialog(null, "Proximamente...");
    }//GEN-LAST:event_bEliminarMeseroActionPerformed

    private void bSalirProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bSalirProductosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bSalirProductosMouseClicked

    private void bSalirProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirProductosActionPerformed
        this.setTitle("Galeras | Inicio");
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirProductosActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Productos.setVisible(false);
        Sillas.setVisible(false);
        MesaPrincipal.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Cuentas.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        User.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void bRegistrarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegistrarCategoriaActionPerformed
        int id_categoria = Integer.parseInt(tIDCategoria.getText());
        String nombre_categoria = tEscribirCategoria.getText();
        this.agregarCategoria(id_categoria, nombre_categoria);
    }//GEN-LAST:event_bRegistrarCategoriaActionPerformed

    private void bRegistroProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegistroProductoActionPerformed
        int id_producto = Integer.parseInt(tID_Productos.getText());
        String nombre_producto =tNombreproducto.getText();
        int fk_id_categoria = this.automatizacionCategoria();
        int precio = Integer.parseInt(tPrecioProducto.getText());
        this.registrarProducto(id_producto, nombre_producto, fk_id_categoria, precio);
    }//GEN-LAST:event_bRegistroProductoActionPerformed

    private void cComparativaComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cComparativaComboActionPerformed
        int id_compa = cComparativaCombo.getSelectedIndex();
        if(id_compa == 0){
            this.consultaProductos(1);
        }else if(id_compa == 1){
            this.consultaProductos(2);
        }
    }//GEN-LAST:event_cComparativaComboActionPerformed

    private void jSeleccionProducto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSeleccionProducto1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSeleccionProducto1ActionPerformed

    private void cComparativaComboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cComparativaComboMouseClicked

    }//GEN-LAST:event_cComparativaComboMouseClicked

    private void JProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JProductoActionPerformed
        String nombre_producto = (String) JProducto.getSelectedItem();
        this.precioProducto(nombre_producto);
    }//GEN-LAST:event_JProductoActionPerformed

    private void jCuentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCuentasMouseClicked
        this.setTitle("Galeras | Cuentas");
        Productos.setVisible(false);
        Sillas.setVisible(false);
        MesaPrincipal.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(false);
        Cuentas.setVisible(true);
        bAgregarMesa.setVisible(false);
        bModificarMesa.setVisible(false);
        bPagarMesa.setVisible(false);
        PedidosEnVivo.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_jCuentasMouseClicked

    private void jCuentasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCuentasMouseEntered
        jMenu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jCuentasMouseEntered

    private void jCuentasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCuentasMouseExited
        jMenu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jCuentasMouseExited

    private void bSalirMesas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirMesas1ActionPerformed
        this.setTitle("Galeras | Inicio");
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirMesas1ActionPerformed

    private void tNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNombresActionPerformed

    private void tUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tUsuarioActionPerformed

    private void tContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tContraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tContraseñaActionPerformed

    private void tApellidoMaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tApellidoMaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tApellidoMaternoActionPerformed

    private void tIDUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tIDUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tIDUsuarioActionPerformed

    private void bVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVisualizarActionPerformed
        tablaCuentas.setVisible(true);
        this.habilitarTablaCuenta(false);
        this.mostrarCuentasUsuario();
    }//GEN-LAST:event_bVisualizarActionPerformed

    private void bRegistrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRegistrarSesionActionPerformed
        String nombres = tNombres.getText();
        String apellidosPaterno = tApellidoPaterno.getText();
        String apellidosMaterno = tApellidoMaterno.getText();
        int id_usuario_cuenta = Integer.parseInt(tIDUsuario.getText());
        String usuario_cuenta = tUsuario.getText();
        String contrasena = tContraseña.getText();
        this.registrarCuentas(id_usuario_cuenta, nombres, apellidosPaterno, apellidosMaterno, usuario_cuenta, contrasena);
    }//GEN-LAST:event_bRegistrarSesionActionPerformed

    private void bEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarUsuarioActionPerformed
        eliminarUsuario.setVisible(true);
        this.habilitarEliminarUsuario(false);
        this.mostrarCuentasUsuario2();
    }//GEN-LAST:event_bEliminarUsuarioActionPerformed

    private void bSalirTablaCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirTablaCuentaActionPerformed
        tablaCuentas.setVisible(false);
        this.habilitarTablaCuenta(true);
    }//GEN-LAST:event_bSalirTablaCuentaActionPerformed

    private void bSalirEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirEliminarUsuarioActionPerformed
        eliminarUsuario.setVisible(false);
        this.habilitarEliminarUsuario(true);
    }//GEN-LAST:event_bSalirEliminarUsuarioActionPerformed

    private void tApellidoPaternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tApellidoPaternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tApellidoPaternoActionPerformed

    private void tBorrarCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tBorrarCuentaActionPerformed
        int id_user = Integer.parseInt(tBorrar.getText());
        this.eliminarCuentas(id_user);
    }//GEN-LAST:event_tBorrarCuentaActionPerformed

    private void lUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lUsuarioMouseClicked
        if(user == false){
            userInfo.setVisible(true);
            user = true;
        }else if(user == true){
            user = false;
            userInfo.setVisible(false);
        }
    }//GEN-LAST:event_lUsuarioMouseClicked

    private void lUsuarioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lUsuarioMouseEntered
        jMenu.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lUsuarioMouseEntered

    private void lUsuarioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lUsuarioMouseExited
        jMenu.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_lUsuarioMouseExited

    private void lUserInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lUserInfoMouseClicked
        this.setTitle("Galeras | "+nombre_user);
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(false);
        Cuentas.setVisible(false);
        userInfo.setVisible(false);
        bAgregarMesa.setVisible(false);
        bModificarMesa.setVisible(false);
        bPagarMesa.setVisible(false);
        PedidosEnVivo.setVisible(false);
        user = false;
        this.mostrarUser(id_user);
        User.setVisible(true);
    }//GEN-LAST:event_lUserInfoMouseClicked

    private void lUserInfoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lUserInfoMouseEntered
        userInfo.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lUserInfoMouseEntered

    private void lUserInfoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lUserInfoMouseExited
        userInfo.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_lUserInfoMouseExited

    private void lCerrarSesionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCerrarSesionMouseClicked
        this.dispose();
        InicioSesion inicio = new InicioSesion();
        inicio.settMostrarUser(usuario_user, password_user);
        inicio.setVisible(true);
    }//GEN-LAST:event_lCerrarSesionMouseClicked

    private void lCerrarSesionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCerrarSesionMouseEntered
        userInfo.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lCerrarSesionMouseEntered

    private void lCerrarSesionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lCerrarSesionMouseExited
        userInfo.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_lCerrarSesionMouseExited

    private void bSalirInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirInfoActionPerformed
        this.setTitle("Galeras | Inicio");
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        PedidosEnVivo.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirInfoActionPerformed

    private void bVisualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVisualizar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bVisualizar1ActionPerformed

    private void tNombresUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNombresUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNombresUserActionPerformed

    private void tUsuarioUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tUsuarioUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tUsuarioUserActionPerformed

    private void tContraseñaUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tContraseñaUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tContraseñaUserActionPerformed

    private void tApellidoMaternoUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tApellidoMaternoUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tApellidoMaternoUserActionPerformed

    private void tIDUsuarioUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tIDUsuarioUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tIDUsuarioUserActionPerformed

    private void bEliminarUsuario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarUsuario1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bEliminarUsuario1ActionPerformed

    private void tApellidoPaternoUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tApellidoPaternoUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tApellidoPaternoUserActionPerformed

    private void tEscribirCategoriaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tEscribirCategoriaKeyReleased
        bRegistrarCategoria.setEnabled(true);
        lValidacionC.setText("");
        this.ValidacionCategoria(tEscribirCategoria.getText());
        if(evt.getKeyCode() == KeyEvent.VK_BACKSPACE){
            bRegistrarCategoria.setEnabled(true);
            lValidacionC.setText("");
            this.ValidacionCategoria(tEscribirCategoria.getText());
        }
    }//GEN-LAST:event_tEscribirCategoriaKeyReleased

    private void tNombreproductoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tNombreproductoKeyReleased
        bRegistroProducto.setEnabled(true);
        lValidacionP.setText("");
        this.ValidacionProducto(tNombreproducto.getText());
        if(evt.getKeyCode() == KeyEvent.VK_BACKSPACE){
            bRegistroProducto.setEnabled(true);
            lValidacionP.setText("");
            this.ValidacionProducto(tNombreproducto.getText());
        }
    }//GEN-LAST:event_tNombreproductoKeyReleased

    private void tUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tUsuarioKeyReleased
        bRegistrarSesion.setEnabled(true);
        lValidacionU.setText("");
        this.ValidacionUser(tUsuario.getText());
        if(evt.getKeyCode() == KeyEvent.VK_BACKSPACE){
            bRegistrarSesion.setEnabled(true);
            lValidacionU.setText("");
            this.ValidacionUser(tUsuario.getText());
        }
    }//GEN-LAST:event_tUsuarioKeyReleased

    private void bAgregarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarMesaActionPerformed
        try {
            this.setTitle("Galeras | Agregar pedido");
            cMesa.removeAllItems();
            this.cargarComboMesasMesas();
            tTicketMesas.setText(""+this.generarIDTicket(id));
            this.registroIDInicialTicket(this.generarIDTicket(id));
            this.mostrarPedidosTicket(Integer.parseInt(tTicketMesas.getText()));
            this.aparacerDesaparecerMesas(1);
            Productos.setVisible(false);
            MesaPrincipal.setVisible(false);
            Sillas.setVisible(false);
            Meseros.setVisible(false);
            Reporte.setVisible(false);
            Comparativa.setVisible(false);
            bAgregarMesa.setVisible(false);
            bModificarMesa.setVisible(false);
            bPagarMesa.setVisible(false);
            PedidosEnVivo.setVisible(false);
            Cuentas.setVisible(false);
            User.setVisible(false);
            Mesas.setVisible(false);
            MesaPrincipal.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bAgregarMesaActionPerformed

    private void PedidosEnVivoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PedidosEnVivoMouseEntered
        this.setTitle("Galeras | Pedidos en vivo");
    }//GEN-LAST:event_PedidosEnVivoMouseEntered

    private void PedidosEnVivoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PedidosEnVivoMouseExited
        this.setTitle("Galeras | Inicio");
    }//GEN-LAST:event_PedidosEnVivoMouseExited

    private void TablaEnVivoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaEnVivoMouseEntered
        this.setTitle("Galeras | Pedidos en vivo");
    }//GEN-LAST:event_TablaEnVivoMouseEntered

    private void bEnviarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnviarPedidoActionPerformed
        this.setTitle("Galeras | Inicio");
        this.UpdateTickets(this.MostrarMeseroMesa(), Integer.parseInt((String) cMesa.getSelectedItem()), Integer.parseInt(tTicketMesas.getText()));
        this.MesasOcupacion(Integer.parseInt((String) cMesa.getSelectedItem())); 
        this.statusOccupied(Integer.parseInt((String) cMesa.getSelectedItem()));
        this.mostrarPedidas();
        this.aparacerDesaparecerMesas(0);
        MesaPrincipal.setVisible(false);
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        PedidosEnVivo.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bEnviarPedidoActionPerformed

    private void tTicketMesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tTicketMesasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tTicketMesasActionPerformed

    private void bModificarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarMesaActionPerformed
        try {
            this.setTitle("Galeras | Modificar pedido");
            this.consultarMesasOcupadas();
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.cargarComboModificar();
            this.aparacerDesaparecerMesas(1);
            Productos.setVisible(false);
            MesaPrincipal.setVisible(false);
            Sillas.setVisible(false);
            Meseros.setVisible(false);
            Reporte.setVisible(false);
            Comparativa.setVisible(false);
            bAgregarMesa.setVisible(false);
            bModificarMesa.setVisible(false);
            bPagarMesa.setVisible(false);
            PedidosEnVivo.setVisible(false);
            Cuentas.setVisible(false);
            User.setVisible(false);
            Mesas.setVisible(false);
            MesaPrincipal.setVisible(false);
            ModificarPedido.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bModificarMesaActionPerformed

    private void bSalirModificarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirModificarPedidoActionPerformed
        this.setTitle("Galeras | Inicio");
        this.aparacerDesaparecerMesas(0);
        ModificarPedido.setVisible(false);
        MesaPrincipal.setVisible(false);
        Productos.setVisible(false);
        MesaPrincipal.setVisible(false);
        Sillas.setVisible(false);
        Meseros.setVisible(false);
        Reporte.setVisible(false);
        Comparativa.setVisible(false);
        Mesas.setVisible(true);
        bAgregarMesa.setVisible(true);
        bModificarMesa.setVisible(true);
        bPagarMesa.setVisible(true);
        PedidosEnVivo.setVisible(true);
        Cuentas.setVisible(false);
        User.setVisible(false);
    }//GEN-LAST:event_bSalirModificarPedidoActionPerformed

    private void bAgregarPedidoModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarPedidoModificarActionPerformed
        if(Integer.parseInt((String) cMesa.getSelectedItem()) == 1){
            int precio_t = Integer.parseInt(tPrecioModificar.getText());
            int cantidad_t = Integer.parseInt(sCantidadModificar.getValue().toString());
            int total_t = precio_t*cantidad_t;
            this.registroTicket(Integer.parseInt(tTicketModificar.getText()), this.comboProductoModificar(), Integer.parseInt((String) cMesaModificar.getSelectedItem()), Integer.parseInt(tPrecioModificar.getText()), Integer.parseInt(sCantidadModificar.getValue().toString()), total_t);
            this.mostrarModificarTicket(Integer.parseInt(tTicketMesas.getText()));
        }else{
            int precio_t = Integer.parseInt(tPrecioModificar.getText());
            int cantidad_t = Integer.parseInt(sCantidadModificar.getValue().toString());
            int total_t = precio_t*cantidad_t;
            this.registroTicket(Integer.parseInt(tTicketModificar.getText()), this.comboProductoModificar(), Integer.parseInt((String) cMesaModificar.getSelectedItem()), Integer.parseInt(tPrecioModificar.getText()), Integer.parseInt(sCantidadModificar.getValue().toString()), total_t);          
            this.mostrarModificarTicket(Integer.parseInt(tTicketMesas.getText()));
        }
    }//GEN-LAST:event_bAgregarPedidoModificarActionPerformed

    private void jCategoriaModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCategoriaModificarActionPerformed
        int id_mesas = jCategoriaModificar.getSelectedIndex();
        if(id_mesas == 0){
            this.consultaProductosModificar(1);
        }else if(id_mesas == 1){
            this.consultaProductosModificar(2);
        }else if(id_mesas == 2){
            this.consultaProductosModificar(3);
        }else if(id_mesas == 3){
            this.consultaProductosModificar(4);
        }else if(id_mesas == 4){
            this.consultaProductosModificar(5);
        }else if(id_mesas == 5){
            this.consultaProductosModificar(6);
        }else{
            this.consultaProductosModificar(id_mesas);
        }
    }//GEN-LAST:event_jCategoriaModificarActionPerformed

    private void JProductoModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JProductoModificarActionPerformed
        String producto = (String) JProductoModificar.getSelectedItem();
        this.precioProductoModificar(producto);
    }//GEN-LAST:event_JProductoModificarActionPerformed

    private void tMeseroPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tMeseroPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tMeseroPedidoActionPerformed

    private void tTicketModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tTicketModificarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tTicketModificarActionPerformed

    private void cMesaModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cMesaModificarActionPerformed
        if(cMesaModificar.getSelectedIndex() == 0){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 1){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 2){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 3){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 4){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 5){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 6){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 7){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 8){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 9){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 10){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 11){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 12){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 13){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 14){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 15){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 16){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 17){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 18){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 19){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 20){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 21){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 22){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 23){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 24){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 25){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 26){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 27){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 28){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 29){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 30){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 31){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 32){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 33){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 34){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 35){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 36){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 37){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 38){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 39){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 40){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 41){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 42){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 43){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 44){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 45){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 46){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 47){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 48){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }else if(cMesaModificar.getSelectedIndex() == 49){
            this.mostrarDatosModificarPedido(Integer.parseInt((String) cMesaModificar.getSelectedItem()));
            this.mostrarModificarTicket(Integer.parseInt(tTicketModificar.getText()));
        }
    }//GEN-LAST:event_cMesaModificarActionPerformed

    private void ModificarPedidoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModificarPedidoMouseEntered

    }//GEN-LAST:event_ModificarPedidoMouseEntered

    private void bSalirModificarPedido1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirModificarPedido1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bSalirModificarPedido1ActionPerformed

    private void bPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPagarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bPagarActionPerformed

    private void tMeseroPedido1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tMeseroPedido1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tMeseroPedido1ActionPerformed

    private void cMesaModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cMesaModificar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cMesaModificar1ActionPerformed

    private void tTicketModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tTicketModificar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tTicketModificar1ActionPerformed

    private void PagarPedidoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PagarPedidoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_PagarPedidoMouseEntered
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Beta_Galera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Beta_Galera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Beta_Galera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Beta_Galera.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Beta_Galera().setVisible(true);
            }
        });
    }
    
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Icono/Logon.png"));
        return retValue;
    }
    
    public void habilitarTablaCuenta(boolean boton){
        if(boton == true){
            bVisualizar.setEnabled(true);
        }else{
            bVisualizar.setEnabled(false);
        }
    }
    
    public void habilitarEliminarUsuario(boolean boton){
        if(boton == true){
            bEliminarUsuario.setEnabled(true);
        }else{
            bEliminarUsuario.setEnabled(false);
        }
    }
    
    public void colorMesaDefault(){
        Mesa1.setForeground(Color.GREEN);
        Mesa2.setForeground(Color.GREEN);
        Mesa3.setForeground(Color.GREEN);
        Mesa4.setForeground(Color.GREEN);
        Mesa5.setForeground(Color.GREEN);
        //Mesa6.setForeground(Color.GREEN);
        //Mesa7.setForeground(Color.GREEN);
        //Mesa8.setForeground(Color.GREEN);
        //Mesa9.setForeground(Color.GREEN);
        //Mesa10.setForeground(Color.GREEN);
        //Mesa11.setForeground(Color.GREEN);
        //Mesa12.setForeground(Color.GREEN);
        //Mesa13.setForeground(Color.GREEN);
        //Mesa14.setForeground(Color.GREEN);   
    }
    
    public void statusOccupied(int numero){
        if(numero==1){
            mesa1="Occupied";
            Mesa1.setForeground(Color.RED);
        }else if(numero==2){
            mesa2="Occupied";
            Mesa2.setForeground(Color.RED);
        }else if(numero==3){
            mesa3="Occupied";
            Mesa3.setForeground(Color.RED);
        }else if(numero==4){
            mesa4="Occupied";
            Mesa4.setForeground(Color.RED);
        }else if(numero==5){
            mesa5="Occupied";
            Mesa5.setForeground(Color.RED);
        /*}else if(numero==6){
            mesa6="Occupied";
            Mesa6.setForeground(Color.RED);
        }else if(numero==7){
            mesa7="Occupied";
            Mesa7.setForeground(Color.RED);
        }else if(numero==8){
            mesa8="Occupied";
            Mesa8.setForeground(Color.RED);
        }else if(numero==9){
            mesa9="Occupied";
            Mesa9.setForeground(Color.RED);
        }else if(numero==10){
            mesa10="Occupied";
            Mesa10.setForeground(Color.RED);*/
        }else if(numero==11){
            mesa11="Occupied";
        }else if(numero==12){
            mesa12="Occupied";
        }else if(numero==13){
            mesa13="Occupied";
        }else if(numero==14){
            mesa3="Occupied";
        }else if(numero==3){
            mesa14="Occupied";
        }else if(numero==15){
            mesa15="Occupied";
        }else if(numero==16){
            mesa16="Occupied";
        }else if(numero==17){
            mesa17="Occupied";
        }else if(numero==18){
            mesa18="Occupied";
        }else if(numero==19){
            mesa19="Occupied";
        }else if(numero==20){
            mesa20="Occupied";
        }else if(numero==21){
            mesa21="Occupied";
        }else if(numero==22){
            mesa22="Occupied";
        }else if(numero==23){
            mesa23="Occupied";
        }else if(numero==24){
            mesa24="Occupied";
        }else if(numero==25){
            mesa25="Occupied";
        }else if(numero==26){
            mesa26="Occupied";
        }else if(numero==27){
            mesa27="Occupied";
        }else if(numero==28){
            mesa28="Occupied";
        }else if(numero==29){
            mesa29="Occupied";
        }else if(numero==30){
            mesa30="Occupied";
        }else if(numero==31){
            mesa31="Occupied";
        }else if(numero==32){
            mesa33="Occupied";
        }else if(numero==33){
            mesa33="Occupied";
        }else if(numero==34){
            mesa34="Occupied";
        }else if(numero==35){
            mesa35="Occupied";
        }else if(numero==36){
            mesa36="Occupied";
        }else if(numero==37){
            mesa37="Occupied";
        }else if(numero==38){
            mesa38="Occupied";
        }else if(numero==39){
            mesa39="Occupied";
        }else if(numero==40){
            mesa40="Occupied";
        }else if(numero==41){
            mesa41="Occupied";
        }else if(numero==42){
            mesa42="Occupied";
        }else if(numero==43){
            mesa43="Occupied";
        }else if(numero==44){
            mesa44="Occupied";
        }else if(numero==45){
            mesa45="Occupied";
        }else if(numero==46){
            mesa46="Occupied";
        }else if(numero==47){
            mesa47="Occupied";
        }else if(numero==48){
            mesa48="Occupied";
        }else if(numero==49){
            mesa49="Occupied";
        }else if(numero==50){
            mesa50="Occupied";
        }
    }
    
     public void statusBorrar(int numero){
        if(numero==1){
            mesa1="Active";
            Mesa1.setForeground(Color.GREEN);
        }else if(numero==2){
            mesa2="Active";
            Mesa2.setForeground(Color.GREEN);
        }else if(numero==3){
            mesa3="Active";
            Mesa3.setForeground(Color.GREEN);
        }else if(numero==4){
            mesa4="Active";
            Mesa4.setForeground(Color.GREEN);
        }else if(numero==5){
            mesa5="Active";
            Mesa5.setForeground(Color.GREEN);
        /*}else if(numero==6){
            mesa6="Active";
            Mesa6.setForeground(Color.GREEN);
        }else if(numero==7){
            mesa7="Active";
            Mesa7.setForeground(Color.GREEN);
        }else if(numero==8){
            mesa8="Active";
            Mesa8.setForeground(Color.GREEN);
        }else if(numero==9){
            mesa9="Active";
            Mesa9.setForeground(Color.GREEN);
        }else if(numero==10){
            mesa10="Active";
            Mesa10.setForeground(Color.GREEN);*/
        }else if(numero==11){
            mesa11="Active";
        }else if(numero==12){
            mesa12="Active";
        }else if(numero==13){
            mesa13="Active";
        }else if(numero==14){
            mesa14="Active";
        }else if(numero==15){
            mesa15="Active";
        }else if(numero==16){
            mesa16="Active";
        }else if(numero==17){
            mesa17="Active";
        }else if(numero==18){
            mesa18="Active";
        }else if(numero==19){
            mesa19="Active";
        }else if(numero==20){
            mesa20="Active";
        }else if(numero==21){
            mesa21="Active";
        }else if(numero==22){
            mesa22="Active";
        }else if(numero==23){
            mesa23="Active";
        }else if(numero==24){
            mesa24="Active";
        }else if(numero==25){
            mesa25="Active";
        }else if(numero==26){
            mesa26="Active";
        }else if(numero==27){
            mesa27="Active";
        }else if(numero==28){
            mesa28="Active";
        }else if(numero==29){
            mesa29="Active";
        }else if(numero==30){
            mesa30="Active";
        }else if(numero==31){
            mesa31="Active";
        }else if(numero==32){
            mesa32="Active";
        }else if(numero==33){
            mesa33="Active";
        }else if(numero==34){
            mesa34="Active";
        }else if(numero==35){
            mesa35="Active";
        }else if(numero==36){
            mesa36="Active";
        }else if(numero==37){
            mesa37="Active";
        }else if(numero==38){
            mesa38="Active";
        }else if(numero==39){
            mesa39="Active";
        }else if(numero==40){
            mesa40="Active";
        }else if(numero==41){
            mesa41="Active";
        }else if(numero==42){
            mesa42="Active";
        }else if(numero==43){
            mesa43="Active";
        }else if(numero==44){
            mesa44="Active";
        }else if(numero==45){
            mesa45="Active";
        }else if(numero==46){
            mesa46="Active";
        }else if(numero==47){
            mesa47="Active";
        }else if(numero==48){
            mesa48="Active";
        }else if(numero==49){
            mesa49="Active";
        }else if(numero==50){
            mesa50="Active";
        }
    }
     
    public void aparacerDesaparecerMesas(int numero){
        if(numero==0){
            Mesa1.setVisible(true);
            Mesa2.setVisible(true);
            Mesa3.setVisible(true);
            Mesa4.setVisible(true);
            Mesa5.setVisible(true);
            /*Mesa6.setVisible(true);
            Mesa7.setVisible(true);
            Mesa8.setVisible(true);
            Mesa9.setVisible(true);
            Mesa10.setVisible(true);
            Mesa11.setVisible(true);
            Mesa12.setVisible(true);
            Mesa13.setVisible(true);
            Mesa14.setVisible(true);
            Mesa15.setVisible(true);
            Mesa16.setVisible(true);
            Mesa17.setVisible(true);
            Mesa18.setVisible(true);
            Mesa19.setVisible(true);
            Mesa20.setVisible(true);
            Mesa21.setVisible(true);
            Mesa22.setVisible(true);
            Mesa23.setVisible(true);
            Mesa24.setVisible(true);
            Mesa25.setVisible(true);
            Mesa26.setVisible(true);
            Mesa27.setVisible(true);
            Mesa28.setVisible(true);
            Mesa29.setVisible(true);
            Mesa30.setVisible(true);
            Mesa31.setVisible(true);
            Mesa32.setVisible(true);
            Mesa33.setVisible(true);
            Mesa34.setVisible(true);
            Mesa35.setVisible(true);
            Mesa36.setVisible(true);
            Mesa37.setVisible(true);
            Mesa38.setVisible(true);
            Mesa39.setVisible(true);
            Mesa40.setVisible(true);
            Mesa41.setVisible(true);
            Mesa42.setVisible(true);
            Mesa43.setVisible(true);
            Mesa44.setVisible(true);
            Mesa45.setVisible(true);
            Mesa46.setVisible(true);
            Mesa47.setVisible(true);
            Mesa48.setVisible(true);
            Mesa49.setVisible(true);
            Mesa50.setVisible(true);*/
            bAgregarMesa.setVisible(true);
            bModificarMesa.setVisible(true);
            bPagarMesa.setVisible(true);
        }else if(numero==1){
            Mesa1.setVisible(false);
            Mesa2.setVisible(false);
            Mesa3.setVisible(false);
            Mesa1.setVisible(false);
            Mesa2.setVisible(false);
            Mesa3.setVisible(false);
            Mesa4.setVisible(false);
            Mesa5.setVisible(false);
            /*Mesa6.setVisible(false);
            Mesa7.setVisible(false);
            Mesa8.setVisible(false);
            Mesa9.setVisible(false);
            Mesa10.setVisible(false);
            Mesa11.setVisible(false);
            Mesa12.setVisible(false);
            Mesa13.setVisible(false);
            Mesa14.setVisible(false);
            Mesa15.setVisible(false);
            Mesa16.setVisible(false);
            Mesa17.setVisible(false);
            Mesa18.setVisible(false);
            Mesa19.setVisible(false);
            Mesa20.setVisible(false);
            Mesa21.setVisible(false);
            Mesa22.setVisible(false);
            Mesa23.setVisible(false);
            Mesa24.setVisible(false);
            Mesa25.setVisible(false);
            Mesa26.setVisible(false);
            Mesa27.setVisible(false);
            Mesa28.setVisible(false);
            Mesa29.setVisible(false);
            Mesa30.setVisible(false);
            Mesa31.setVisible(false);
            Mesa32.setVisible(false);
            Mesa33.setVisible(false);
            Mesa34.setVisible(false);
            Mesa35.setVisible(false);
            Mesa36.setVisible(false);
            Mesa37.setVisible(false);
            Mesa38.setVisible(false);
            Mesa39.setVisible(false);
            Mesa40.setVisible(false);
            Mesa41.setVisible(false);
            Mesa42.setVisible(false);
            Mesa43.setVisible(false);
            Mesa44.setVisible(false);
            Mesa45.setVisible(false);
            Mesa46.setVisible(false);
            Mesa47.setVisible(false);
            Mesa48.setVisible(false);
            Mesa49.setVisible(false);
            Mesa50.setVisible(false);*/
            bAgregarMesa.setVisible(false);
            bModificarMesa.setVisible(false);
            bPagarMesa.setVisible(false);
        }
    }
    
    public int inicio(){
        int duracion = 5;
        final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);
        final Runnable runnable = new Runnable(){
            int countdownStarter = duracion;
            public void run(){
                switch(countdownStarter){
                    case 5:
                        jInicioSesion.setVisible(true);
                        break;
                    case 2:
                        deslice.desplazarDerecha(jInicioSesion, jInicioSesion.getX(), 2000, 30, 1);
                        break;
                }
                countdownStarter--;
                if(countdownStarter<1){
                    try {
                        Thread.sleep(1000);
                        jInicioSesion.setVisible(false);
                        jMenu.setVisible(true);
                        jTiempo1.setText("Ultima sesion: "+tiempo.getDayOfMonth()+"/"+tiempo.getMonth()+"/"+tiempo.getYear()+" "+tiempo.getHour()+":"+tiempo.getMinute()+":"+tiempo.getSecond());
                        Mesas.setVisible(true);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        scheduler.scheduleAtFixedRate(runnable, 0, 1, SECONDS);
        return 0;
    }
    
    public void mostrarMeseros(){
        String apellido_materno,apellido_paterno,nombre;
        try{
            String[] titulos={"Nombre","Apellido Paterno","Apellido Materno"};
            String[] registro = new String[3];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select * from empleados order by id_empleado desc;");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("nombre_empleado");
                    registro[1] = rs.getString("apellido_paterno");
                    registro[2] = rs.getString("apellido_materno");
                    modelo.addRow(registro);
                }
                tmostrarMeseros.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar el mesero: ("+ e.getMessage()+")");
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int generarIDMeseros(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select max(id_empleado) id from empleados;");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id = rs.getInt("id");
            }
            status.close();
            rs.close();
            con.desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id+1;
    }
    
    public void agregarMesero(int id, String nombre, String apellido_paterno, String apellido_materno){
        try {
            try{
                ConexionBD con = new ConexionBD();
                Statement status = con.getConecction().createStatement();
                status.executeUpdate("INSERT INTO empleados (id_empleado, nombre_empleado, apellido_paterno, apellido_materno) VALUES ('"+id+"', '"+nombre+"', '"+apellido_paterno+"', '"+apellido_materno+"');");
                JOptionPane.showMessageDialog(null, "Se registro correctamente");
                tNombre_Mesero.setText("");
                tApellidoP.setText("");
                tApellidoM.setText("");
                tID_Meseros.setText(""+this.generarIDMeseros(id));
                this.mostrarMeseros();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede registrar ("+ e.getMessage()+")");
                tNombre_Mesero.setText("");
                tApellidoP.setText("");
                tApellidoM.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int generarIDCategoria(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select max(id_categoria) id from categoria_productos;");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id = rs.getInt("id");
            }
            status.close();
            rs.close();
            con.desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id+1;
    }
    
    public int generarIDProducto(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select max(id_productos) id from productos;");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id = rs.getInt("id");
            }
            status.close();
            rs.close();
            con.desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id+1;
    }
    
    public void mostrarCategoria(){
        String apellido_materno,apellido_paterno,nombre;
        try{
            String[] titulos={"id","nombre_categorias"};
            String[] registro = new String[2];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select * from categoria_productos;");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("id_categoria");
                    registro[1] = rs.getString("nombre_categoria");
                    modelo.addRow(registro);
                }
                tTablaCategoria.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar el mesero: ("+ e.getMessage()+")");
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void agregarCategoria(int id, String nombre_categoria){
        try {
            try{
                ConexionBD con = new ConexionBD();
                Statement status = con.getConecction().createStatement();
                status.executeUpdate("INSERT INTO categoria_productos (id_categoria, nombre_categoria) VALUES ('"+id+"', '"+nombre_categoria+"');");
                JOptionPane.showMessageDialog(null, "Se registro correctamente");
                tEscribirCategoria.setText("");
                tIDCategoria.setText(""+this.generarIDCategoria(id));
                this.mostrarCategoria();
                jCategoriaProducto.removeAllItems();
                this.cargarComboCategorias();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede registrar ("+ e.getMessage()+")");
                tEscribirCategoria.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public ArrayList<MeserosVO> llamarMeseros() throws SQLException, ClassNotFoundException{
        ArrayList<MeserosVO> misMeseros = new ArrayList<MeserosVO>();
        ConexionBD con = new ConexionBD();
        try{
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from empleados order by id_empleado desc;");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                MeserosVO meseros = new MeserosVO();
                meseros.setId(rs.getInt("id_empleado"));
                meseros.setNombre(rs.getString("nombre_empleado"));
                meseros.setApellido_paterno(rs.getString("apellido_paterno"));
                meseros.setApellido_materno(rs.getString("apellido_materno"));
                misMeseros.add(meseros);
            }
            status.close();
            rs.close();
            con.desconectar();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "No se puede mostrar el mesero: ("+ e.getMessage()+")");
        }
        return misMeseros;
    }
    
    public void cargarComboMesero() throws SQLException, ClassNotFoundException{
        MeserosVO meserosVO;
        ArrayList <MeserosVO> misMeseros = this.llamarMeseros();
        for (int i = 0; i < misMeseros.size(); i++) {
            cMeseroMesas.addItem(misMeseros.get(i).getNombre());
        }
    }
    
    public ArrayList<categoriaVO> llamarCategorias() throws SQLException, ClassNotFoundException{
        ArrayList<categoriaVO> misCategoria = new ArrayList<categoriaVO>();
        ConexionBD con = new ConexionBD();
        try{
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from categoria_productos order by id_categoria;");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                categoriaVO categoria = new categoriaVO();
                categoria.setId_categoria(rs.getInt("id_categoria"));
                categoria.setId_nombre_categoria(rs.getString("nombre_categoria"));
                misCategoria.add(categoria);
            }
            status.close();
            rs.close();
            con.desconectar();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "No se puede mostrar el mesero: ("+ e.getMessage()+")");
        }
        return misCategoria;
    }
    
    public void mostrarProducto(){
        String apellido_materno,apellido_paterno,nombre;
        try{
            String[] titulos={"ID","Nombre producto","Categoria", "Precio"};
            String[] registro = new String[4];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select * from productos;");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("id_productos");
                    registro[1] = rs.getString("nombre_producto");
                    registro[2] = rs.getString("fk_id_categoria");
                    registro[3] = rs.getString("precio");
                    modelo.addRow(registro);
                }
                tTablaProducto.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar la categoria: ("+ e.getMessage()+")");
                System.out.println(""+e.getMessage());
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Esta funcion lo que realiza es paras poder cargar la informacion de los comboBox del panel PRODUCTOS.
    public void cargarComboCategorias() throws SQLException, ClassNotFoundException{
        categoriaVO categoriaVO;
        ArrayList <categoriaVO> misCategorias = this.llamarCategorias();
        for (int i = 0; i < misCategorias.size(); i++) {
            jCategoriaProducto.addItem(misCategorias.get(i).getId_nombre_categoria());
        }
    }
    // Esta funcion lo que realiza es paras poder cargar la informacion de los comboBox del panel COMPARATIVA.
    public void cargarComboCategoriasComparativa() throws SQLException, ClassNotFoundException{
        categoriaVO categoriaVO;
        ArrayList <categoriaVO> misCategorias = this.llamarCategorias();
        for (int i = 0; i < misCategorias.size(); i++) {
            cComparativaCombo.addItem(misCategorias.get(i).getId_nombre_categoria());
        }
    }
    // Esta funcion lo que realice es que se arregle la problematica a la hora de registrar un combox, esto con el fin que registre correctamente en la base de datos.
    public int automatizacionCategoria (){
       int id =  jCategoriaProducto.getSelectedIndex();
       int nueva_id=0;
       if(id == 0){
           nueva_id = id+1;
       }else{
           nueva_id = id+1;
       }
       return nueva_id;
    }
    // Esta funcion lo que realice es que se arregle la problematica a la hora de registrar un combox, esto con el fin que registre correctamente en la base de datos.
    public int automatizacionComparativa(){
       int id =  cComparativaCombo.getSelectedIndex();
       int nueva_id=0;
       if(id == 0){
           nueva_id = id+1;
       }else{
           nueva_id = id+1;
       }
       return nueva_id;
    }
    // Esta funcion es para poder registrar los productos a la base de datos del panel PRODUCTOS.
    public void registrarProducto(int id_productos, String nombre_producto, int fk_id_categoria, int precio){
        try {
            try{
                ConexionBD con = new ConexionBD();
                Statement status = con.getConecction().createStatement();
                status.executeUpdate("INSERT INTO productos (id_productos, nombre_producto, fk_id_categoria, precio) VALUES ('"+id_productos+"', '"+nombre_producto+"', '"+fk_id_categoria+"', '"+precio+"');");
                JOptionPane.showMessageDialog(null, "Se registro correctamente");
                this.mostrarProducto();
                tID_Productos.setText(""+this.generarIDProducto(id));
                tNombreproducto.setText("");
                tPrecioProducto.setText("");
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede registrar ("+ e.getMessage()+")");
                tNombreproducto.setText("");
                tPrecioProducto.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Aqui es para poder funcionar los 3 comboBox del panel COMPARATIVA.
    public ArrayList<productoVO> consultaProductos(int id){
        try {
            ArrayList<productoVO> misProductos = new ArrayList<productoVO>();
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select nombre_producto from productos where fk_id_categoria = '"+id+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                jSeleccionProducto1.removeAllItems();
                jSeleccionProducto2.removeAllItems();
                productoVO producto = new productoVO();
                producto.setNombre(rs.getString("nombre_producto"));
                misProductos.add(producto);
                for (int i = 0; i < misProductos.size(); i++) {
                    jSeleccionProducto1.addItem(misProductos.get(i).getNombre());
                    jSeleccionProducto2.addItem(misProductos.get(i).getNombre());
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    public ArrayList<productoVO> consultaMesas(int id){
        try {
            ArrayList<productoVO> misProductos = new ArrayList<productoVO>();
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select nombre_producto from productos where fk_id_categoria = '"+id+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                JProducto.removeAllItems();
                productoVO producto = new productoVO();
                producto.setNombre(rs.getString("nombre_producto"));
                misProductos.add(producto);
                for (int i = 0; i < misProductos.size(); i++) {
                    JProducto.addItem(misProductos.get(i).getNombre());
                    
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    
    public void cargarComboMesas() throws SQLException, ClassNotFoundException{
        categoriaVO categoriaVO;
        ArrayList <categoriaVO> misCategorias = this.llamarCategorias();
        for (int i = 0; i < misCategorias.size(); i++) {
            jCategoria.addItem(misCategorias.get(i).getId_nombre_categoria());
        }
    }
    
    public int precioProducto(String nombre){
        int precio=0;
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select precio from productos where nombre_producto = '"+nombre+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                precio = rs.getInt("precio");
                tPrecioMesa.setText(""+precio);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return precio;
    }
    
    public int generarIDCuentas(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select max(id_sesion) id from inicio_sesion;");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id = rs.getInt("id");
            }
            status.close();
            rs.close();
            con.desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id+1;
    }
    
    public void registrarCuentas(int id_sesion, String nombre_sesion, String apellido_p_sesion, String apellido_m_sesion, String usuario_sesion, String contrasena_sesion){
        try {
            try{
                ConexionBD con = new ConexionBD();
                Statement status = con.getConecction().createStatement();
                status.executeUpdate("INSERT INTO inicio_sesion (id_sesion, nombre_sesion, apellido_p_sesion, apellido_m_sesion, usuario_sesion, contrasena_sesion) VALUES ('"+id_sesion+"', '"+nombre_sesion+"', '"+apellido_p_sesion+"', '"+apellido_m_sesion+"', '"+usuario_sesion+"', '"+contrasena_sesion+"');");
                JOptionPane.showMessageDialog(null, "Se registro correctamente");
                tNombres.setText("");
                tApellidoPaterno.setText("");
                tApellidoMaterno.setText("");
                tIDUsuario.setText(""+this.generarIDCuentas(id_cuentas));
                tUsuario.setText("");
                tContraseña.setText("");
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede registrar ("+ e.getMessage()+")");
                tNombres.setText("");
                tApellidoPaterno.setText("");
                tApellidoMaterno.setText("");
                tIDUsuario.setText(""+this.generarIDCuentas(id_cuentas));
                tUsuario.setText("");
                tContraseña.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void mostrarCuentasUsuario(){
        try{
            String[] titulos={"ID","Nombre","Usuario","Contraseña"};
            String[] registro = new String[5];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select * from inicio_sesion order by id_sesion desc;");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("id_sesion");
                    registro[1] = rs.getString("nombre_sesion");
                    registro[2] = rs.getString("usuario_sesion");
                    registro[3] = rs.getString("contrasena_sesion");
                    modelo.addRow(registro);
                }
                tablaCuenta.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar las cuentas: ("+ e.getMessage()+")");
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void mostrarCuentasUsuario2(){
        try{
            String[] titulos={"ID","Nombre","Usuario","Contraseña"};
            String[] registro = new String[5];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select * from inicio_sesion order by id_sesion desc;");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("id_sesion");
                    registro[1] = rs.getString("nombre_sesion");
                    registro[2] = rs.getString("usuario_sesion");
                    registro[3] = rs.getString("contrasena_sesion");
                    modelo.addRow(registro);
                }
                tablaEliminar.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar las cuentas: ("+ e.getMessage()+")");
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void eliminarCuentas(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeUpdate("delete from inicio_sesion where id_sesion = '"+id+"';");
            JOptionPane.showMessageDialog(null, "Eliminaste el usuario: "+id);
            this.mostrarCuentasUsuario2();
            tBorrar.setText("");
            status.close();
            con.desconectar();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "No existe este usuario ("+ex+")");
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void mostrarUser(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from inicio_sesion where id_sesion = '"+id+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                tNombresUser.setText(rs.getString("nombre_sesion"));
                tApellidoPaternoUser.setText(rs.getString("apellido_p_sesion"));
                tApellidoMaternoUser.setText(rs.getString("apellido_m_sesion"));
                tIDUsuarioUser.setText(rs.getString("id_sesion"));
                tUsuarioUser.setText(rs.getString("usuario_sesion"));
                tContraseñaUser.setText(rs.getString("contrasena_sesion"));
            }
            con.desconectar();
            status.close();
            rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void ValidacionCategoria(String categoria){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select nombre_categoria from categoria_productos where nombre_categoria = '"+categoria+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            if(rs.next()){
                if(rs.getString("nombre_categoria") == ""){
                }else{
                    lValidacionC.setText("Esta categoria ya existe");
                    lValidacionC.setForeground(Color.RED);
                    bRegistrarCategoria.setEnabled(false);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void ValidacionProducto(String producto){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select nombre_producto from productos where nombre_producto = '"+producto+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            if(rs.next()){
                if(rs.getString("nombre_producto") == ""){
                }else{
                    lValidacionP.setText("Este producto ya existe");
                    lValidacionP.setForeground(Color.RED);
                    bRegistroProducto.setEnabled(false);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
       
    public void ValidacionUser(String user){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select usuario_sesion from inicio_sesion where usuario_sesion = '"+user+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            if(rs.next()){
                if(rs.getString("usuario_sesion") == ""){
                }else{
                    lValidacionU.setText("Este usuario ya existe");
                    lValidacionU.setForeground(Color.RED);
                    bRegistrarSesion.setEnabled(false);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int generarIDTicket(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select max(fk_id_tickets_p) id from tickets_pedidos;");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id = rs.getInt("id");
            }
            status.close();
            rs.close();
            con.desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id+1;
    }
    
    public void registroIDInicialTicket(int id){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeUpdate("INSERT INTO tickets (id_tickets) VALUES ('"+id+"');");
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void registroTicket(int id, int producto, int mesas, int precio, int cantidad, int total){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeUpdate("INSERT INTO tickets_pedidos (fk_id_tickets_p, fk_id_producto_p, fk_id_mesas_p, pk_precio, cantidad, total_pedido) VALUES ('"+id+"', '"+producto+"', '"+mesas+"', '"+precio+"', '"+cantidad+"', '"+total+"');");
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int comboMesero(){
        try {
            ConexionBD con = new ConexionBD();
            String nombre = (String) cMeseroMesas.getSelectedItem();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from empleados where nombre_empleado = '"+nombre+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id_fk_empleado = rs.getInt("id_empleado");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id_fk_empleado;
    }
    
    public int comboProducto(){
        try {
            ConexionBD con = new ConexionBD();
            String producto = (String) JProducto.getSelectedItem();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from productos where nombre_producto = '"+producto+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id_fk = rs.getInt("id_productos");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id_fk;
    }
    
      
    public ArrayList<mesasVO> llamarMesas() throws SQLException, ClassNotFoundException{
        ArrayList<mesasVO> misMesas = new ArrayList<mesasVO>();
        ConexionBD con = new ConexionBD();
        try{
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from mesas where ocupacion = '1';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                mesasVO mesas = new mesasVO();
                mesas.setMesa(rs.getInt("id_mesas"));
                mesas.setOcupacion(rs.getInt("ocupacion"));
                misMesas.add(mesas);
            }
            status.close();
            rs.close();
            con.desconectar();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "No se puede mostrar la mesa ("+ e.getMessage()+")");
        }
        return misMesas;
    }
    
    public void cargarComboMesasMesas() throws SQLException, ClassNotFoundException{
        mesasVO mesasVO;
        ArrayList <mesasVO> misMesas = this.llamarMesas();
        for (int i = 0; i < misMesas.size(); i++) {
            cMesa.addItem(""+misMesas.get(i).getMesa());
        }
    }
    
    public int MostrarMeseroMesa(){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("SELECT id_empleado from empleados where nombre_empleado = '"+(String) cMeseroMesas.getSelectedItem()+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
              id_em = rs.getInt("id_empleado");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id_em;
    }
    
    public void UpdateTickets(int id, int mesa, int ticket){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeUpdate("UPDATE tickets SET fk_id_empleados = '"+id+"', fk_id_mesas = '"+mesa+"' WHERE id_tickets = '"+ticket+"';");
            JOptionPane.showMessageDialog(null, "Se guardo el ticket correctamente");
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void EliminarTicket(int ticket, int mesa){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeUpdate("DELETE FROM tickets_pedidos where fk_id_tickets_p = '"+ticket+"';");
            status.executeUpdate("DELETE FROM tickets WHERE id_tickets = '"+ticket+"';");
            status.executeUpdate("UPDATE mesas SET ocupacion = '1' WHERE id_mesas = '"+mesa+"';");
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }       
    }
    
    public void MesasOcupacion(int mesa){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeUpdate("UPDATE mesas SET ocupacion = '0' WHERE id_mesas = '"+mesa+"';");
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }      
    }
    
    public void mostrarPedidas(){
        try{
            String[] titulos={"MESA", "TICKET"};
            String[] registro = new String[2];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select id_tickets, fk_id_mesas from tickets;");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("fk_id_mesas");
                    registro[1] = rs.getString("id_tickets");
                    modelo.addRow(registro);
                }
                TablaEnVivo.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar los pedidos: ("+ e.getMessage()+")");
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void mostrarPedidosTicket(int tickets){
        try{
            String[] titulos={"Producto", "Mesas", "Precio", "Cantidad", "Total"};
            String[] registro = new String[5];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select * from tickets_pedidos where fk_id_tickets_p = '"+tickets+"';");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("fk_id_producto_p");
                    registro[1] = rs.getString("fk_id_mesas_p");
                    registro[2] = rs.getString("pk_precio");
                    registro[3] = rs.getString("cantidad");
                    registro[4] = rs.getString("total_pedido");
                    modelo.addRow(registro);
                }
                MesaTabla.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar los pedidos: ("+ e.getMessage()+")");
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void DesaparecerAparecerModificarPedido(int numero){
        if(numero == 0){
            tTicketModificar.setVisible(false);
            tMeseroPedido.setVisible(false);
            jCategoriaModificar.setVisible(false);
            JProductoModificar.setVisible(false);
            sCantidadModificar.setVisible(false);
            bAgregarPedidoModificar.setVisible(false);
            tPrecioModificar.setVisible(false);
        }else if(numero == 1){
            tTicketModificar.setVisible(true);
            tMeseroPedido.setVisible(true);
            jCategoriaModificar.setVisible(true);
            JProductoModificar.setVisible(true);
            sCantidadModificar.setVisible(true);
            bAgregarPedidoModificar.setVisible(true);

            tPrecioModificar.setVisible(true);    
        }
    }
    
    public ArrayList<mesasModificarVO> consultarMesasOcupadas(){
        try {
            ArrayList<mesasModificarVO> misMesas = new ArrayList<mesasModificarVO>();
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select id_mesas from mesas where ocupacion = '0';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                cMesaModificar.removeAllItems();
                mesasModificarVO mesa = new mesasModificarVO();
                mesa.setMesa(rs.getInt("id_mesas"));
                misMesas.add(mesa);
                for (int i = 0; i < misMesas.size(); i++) {
                    cMesaModificar.addItem(misMesas.get(i).getMesa()+"");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    public void mostrarDatosModificarPedido(int mesa){
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from tickets where fk_id_mesas = '"+mesa+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                tTicketModificar.setText(rs.getString("id_tickets"));
                tMeseroPedido.setText(rs.getString("fk_id_empleados"));
                
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void cargarComboModificar() throws SQLException, ClassNotFoundException{
        categoriaVO categoriaVO;
        ArrayList <categoriaVO> misCategorias = this.llamarCategorias();
        for (int i = 0; i < misCategorias.size(); i++) {
            jCategoriaModificar.addItem(misCategorias.get(i).getId_nombre_categoria());
        }
    }
    
    public ArrayList<productoVO> consultaProductosModificar(int id){
        try {
            ArrayList<productoVO> misProductos = new ArrayList<productoVO>();
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select nombre_producto from productos where fk_id_categoria = '"+id+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                JProductoModificar.removeAllItems();
                productoVO producto = new productoVO();
                producto.setNombre(rs.getString("nombre_producto"));
                misProductos.add(producto);
                for (int i = 0; i < misProductos.size(); i++) {
                    JProductoModificar.addItem(misProductos.get(i).getNombre());
                    
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    public int precioProductoModificar(String nombre){
        int precio=0;
        try {
            ConexionBD con = new ConexionBD();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select precio from productos where nombre_producto = '"+nombre+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                precio = rs.getInt("precio");
                tPrecioModificar.setText(""+precio);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return precio;
    }
    
    public void mostrarModificarTicket(int tickets){
        try{
            String[] titulos={"Producto", "Mesas", "Precio", "Cantidad", "Total"};
            String[] registro = new String[5];
            DefaultTableModel modelo = new DefaultTableModel(null, titulos);
            ConexionBD con = new ConexionBD();
            try{
                Statement status = con.getConecction().createStatement();
                status.executeQuery("Select * from tickets_pedidos where fk_id_tickets_p = '"+tickets+"';");
                ResultSet rs = null;
                rs = status.getResultSet();
                while(rs.next()){
                    registro[0] = rs.getString("fk_id_producto_p");
                    registro[1] = rs.getString("fk_id_mesas_p");
                    registro[2] = rs.getString("pk_precio");
                    registro[3] = rs.getString("cantidad");
                    registro[4] = rs.getString("total_pedido");
                    modelo.addRow(registro);
                }
                ModificarTabla.setModel(modelo);
                status.close();
                rs.close();
                con.desconectar();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "No se puede mostrar los pedidos: ("+ e.getMessage()+")");
            }
        }catch(SQLException ex){
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE,null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
        public int comboProductoModificar(){
        try {
            ConexionBD con = new ConexionBD();
            String producto = (String) JProductoModificar.getSelectedItem();
            Statement status = con.getConecction().createStatement();
            status.executeQuery("Select * from productos where nombre_producto = '"+producto+"';");
            ResultSet rs = null;
            rs = status.getResultSet();
            while(rs.next()){
                id_fk_m = rs.getInt("id_productos");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Beta_Galera.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id_fk_m;
    }
    
    boolean ticket = true;
    boolean user = false;
    int numeroM;
    String nombre_user, password_user, usuario_user, meseroMesasUser;
    int id_user;
    int id=0, id_cuentas, id_fk, id_fk_empleado, id_em, id_fk_m;
    LocalDateTime tiempo = LocalDateTime.now();
    Desface deslice = new Desface();
    boolean mesas,comparativa,productos,reporte,meseros;
    String mesa1="Active", mesa2="Active", mesa3="Active", mesa4="Active", mesa5="Active", mesa6="Active", mesa7="Active", mesa8="Active", mesa9="Active", mesa10="Active", mesa11="Active", mesa12="Active", mesa13="Active", mesa14="Active", mesa15="Active", mesa16="Active", mesa17="Active", mesa18="Active", mesa19="Active", mesa20="Active", mesa21="Active", mesa22="Active", mesa23="Active", mesa24="Active", mesa25="Active", mesa26="Active", mesa27="Active", mesa28="Active", mesa29="Active", mesa30="Active", mesa31="Active", mesa32="Active", mesa33="Active", mesa34="Active", mesa35="Active", mesa36="Active", mesa37="Active", mesa38="Active", mesa39="Active", mesa40="Active", mesa41="Active", mesa42="Active", mesa43="Active", mesa44="Active", mesa45="Active", mesa46="Active", mesa47="Active", mesa48="Active", mesa49="Active", mesa50="Active";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Comparativa;
    private javax.swing.JPanel Cuentas;
    private javax.swing.JLabel FechaActualMesero;
    private javax.swing.JComboBox<String> JProducto;
    private javax.swing.JComboBox<String> JProductoModificar;
    private javax.swing.JLabel Mesa1;
    private javax.swing.JLabel Mesa2;
    private javax.swing.JLabel Mesa3;
    private javax.swing.JLabel Mesa4;
    private javax.swing.JLabel Mesa5;
    private javax.swing.JPanel MesaPrincipal;
    private javax.swing.JTable MesaTabla;
    private javax.swing.JTable MesaTabla1;
    private javax.swing.JPanel Mesas;
    private javax.swing.JPanel Meseros;
    private javax.swing.JPanel ModificarPedido;
    private javax.swing.JTable ModificarTabla;
    private javax.swing.JTable ModificarTabla1;
    private javax.swing.JPanel PagarPedido;
    private javax.swing.JPanel PedidosEnVivo;
    private javax.swing.JPanel Productos;
    private javax.swing.JPanel Reporte;
    private javax.swing.JPanel Sillas;
    private javax.swing.JTable TablaEnVivo;
    private javax.swing.JPanel User;
    private javax.swing.JButton bAgregarMesa;
    private javax.swing.JButton bAgregarPedido;
    private javax.swing.JButton bAgregarPedidoModificar;
    private javax.swing.JButton bEliminarMesero;
    private javax.swing.JButton bEliminarUsuario;
    private javax.swing.JButton bEliminarUsuario1;
    private javax.swing.JButton bEnviarPedido;
    private javax.swing.JButton bModificarMesa;
    private javax.swing.JButton bPagar;
    private javax.swing.JButton bPagarMesa;
    private javax.swing.JButton bRegistrarCategoria;
    private javax.swing.JButton bRegistrarMesero;
    private javax.swing.JButton bRegistrarSesion;
    private javax.swing.JButton bRegistroProducto;
    private javax.swing.JButton bSalirComparativa;
    private javax.swing.JButton bSalirEliminarUsuario;
    private javax.swing.JButton bSalirInfo;
    private javax.swing.JButton bSalirMesas;
    private javax.swing.JButton bSalirMesas1;
    private javax.swing.JButton bSalirMesasPrincipales;
    private javax.swing.JButton bSalirMeseros;
    private javax.swing.JButton bSalirModificarPedido;
    private javax.swing.JButton bSalirModificarPedido1;
    private javax.swing.JButton bSalirProductos;
    private javax.swing.JButton bSalirReporte;
    private javax.swing.JButton bSalirTablaCuenta;
    private javax.swing.JButton bVisualizar;
    private javax.swing.JButton bVisualizar1;
    private javax.swing.JComboBox<String> cComparativaCombo;
    private javax.swing.JComboBox<String> cMesa;
    private javax.swing.JComboBox<String> cMesaModificar;
    private javax.swing.JComboBox<String> cMesaModificar1;
    private javax.swing.JComboBox<String> cMeseroMesas;
    private javax.swing.JPanel eliminarUsuario;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jCategoria;
    private javax.swing.JComboBox<String> jCategoriaModificar;
    private javax.swing.JComboBox<String> jCategoriaProducto;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JLabel jComparativa;
    private javax.swing.JLabel jCuentas;
    private javax.swing.JPanel jInicio;
    private javax.swing.JPanel jInicioSesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jMenu;
    private javax.swing.JLabel jMesas;
    private javax.swing.JLabel jMeseros;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPreInformacion;
    private javax.swing.JLabel jProductos;
    private javax.swing.JLabel jReporte;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JComboBox<String> jSeleccionProducto1;
    private javax.swing.JComboBox<String> jSeleccionProducto2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel jTiempo;
    private javax.swing.JLabel jTiempo1;
    private javax.swing.JLabel jTitulo;
    private javax.swing.JLabel jTitulo1;
    private javax.swing.JLabel jTitulo2;
    private javax.swing.JLabel lCerrarSesion;
    private javax.swing.JLabel lCirculo;
    private javax.swing.JLabel lGaleras;
    private javax.swing.JLabel lTituloMesa;
    private javax.swing.JLabel lTituloMesa1;
    private javax.swing.JLabel lTituloMesa2;
    private javax.swing.JLabel lUserInfo;
    private javax.swing.JLabel lUsuario;
    private javax.swing.JLabel lValidacionC;
    private javax.swing.JLabel lValidacionP;
    private javax.swing.JLabel lValidacionU;
    private javax.swing.JLabel lll;
    private javax.swing.JPanel panelMesero1;
    private javax.swing.JPanel panelMesero10;
    private javax.swing.JPanel panelMesero2;
    private javax.swing.JPanel panelMesero3;
    private javax.swing.JPanel panelMesero4;
    private javax.swing.JPanel panelMesero5;
    private javax.swing.JPanel panelMesero6;
    private javax.swing.JPanel panelMesero7;
    private javax.swing.JPanel panelMesero8;
    private javax.swing.JPanel panelMesero9;
    private javax.swing.JSpinner sCantidad;
    private javax.swing.JSpinner sCantidadModificar;
    private javax.swing.JTextField tApellidoM;
    private javax.swing.JTextField tApellidoMaterno;
    private javax.swing.JTextField tApellidoMaternoUser;
    private javax.swing.JTextField tApellidoP;
    private javax.swing.JTextField tApellidoPaterno;
    private javax.swing.JTextField tApellidoPaternoUser;
    private javax.swing.JTextField tBorrar;
    private javax.swing.JButton tBorrarCuenta;
    private javax.swing.JTextField tContraseña;
    private javax.swing.JTextField tContraseñaUser;
    private javax.swing.JTextField tEscribirCategoria;
    private javax.swing.JTextField tIDCategoria;
    private javax.swing.JTextField tIDUsuario;
    private javax.swing.JTextField tIDUsuarioUser;
    private javax.swing.JTextField tID_Meseros;
    private javax.swing.JTextField tID_Productos;
    private javax.swing.JTextField tMeseroPedido;
    private javax.swing.JTextField tMeseroPedido1;
    private javax.swing.JTextField tNombre_Mesero;
    private javax.swing.JTextField tNombreproducto;
    private javax.swing.JTextField tNombres;
    private javax.swing.JTextField tNombresUser;
    private javax.swing.JTextField tPrecioMesa;
    private javax.swing.JTextField tPrecioModificar;
    private javax.swing.JTextField tPrecioModificar1;
    private javax.swing.JTextField tPrecioProducto;
    private javax.swing.JTable tTablaCategoria;
    private javax.swing.JTable tTablaProducto;
    private javax.swing.JTextField tTicketMesas;
    private javax.swing.JTextField tTicketModificar;
    private javax.swing.JTextField tTicketModificar1;
    private javax.swing.JTextField tUsuario;
    private javax.swing.JTextField tUsuarioUser;
    private javax.swing.JTable tablaCuenta;
    private javax.swing.JPanel tablaCuentas;
    private javax.swing.JTable tablaEliminar;
    private javax.swing.JTable tmostrarMeseros;
    private javax.swing.JPanel userInfo;
    // End of variables declaration//GEN-END:variables

    void settMostrarDatos(String user, String password, String nombre, String apellido0, String apellido1, int id){
        lUsuario.setText("Usuario: "+user);
        lGaleras.setText("Bienvenido "+nombre+" "+apellido0+" "+apellido1+" a Galeras");
        usuario_user = user; 
        nombre_user = nombre+" "+apellido0+" "+apellido1;
        password_user = password;
        id_user = id;
    }
    
    public void circuloEnVivo(){
        Timer timer = new Timer();
        TimerTask task = new TimerTask() {
            int tic = 0;
            @Override
            public void run() {
                if(tic%2==0){
                    lCirculo.setVisible(true);
                }else{
                    lCirculo.setVisible(false);
                }
                tic++;
            }
        };
        timer.schedule(task, 10, 500);
    }

}